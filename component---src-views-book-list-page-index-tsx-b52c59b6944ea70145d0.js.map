{"version":3,"file":"component---src-views-book-list-page-index-tsx-b52c59b6944ea70145d0.js","mappings":"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","sources":["webpack://chareads.com/./src/utils/hooks/useIsomorphicLayoutEffect.ts","webpack://chareads.com/./src/utils/hooks/useScrollPosition.ts","webpack://chareads.com/./src/components/InfiniteScroll/index.tsx","webpack://chareads.com/./src/components/cards/BookCard/index.tsx","webpack://chareads.com/./src/utils/formatting/text.ts","webpack://chareads.com/./src/utils/graphql/normalize.ts","webpack://chareads.com/./src/utils/tags/index.ts","webpack://chareads.com/./src/utils/hooks/useClickOutside.ts","webpack://chareads.com/./src/views/BookListPage/FilterTrigger.tsx","webpack://chareads.com/./src/utils/hooks/useQueryParamSync.ts","webpack://chareads.com/./src/views/BookListPage/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst isBrowser = typeof window !== `undefined`\n\nconst getScrollPosition = (\n  element: React.RefObject<React.ReactNode>\n): number => {\n  if (!isBrowser) return 0\n\n  const target = (element.current || document.body) as HTMLElement\n  return target.getBoundingClientRect().bottom - window.innerHeight\n}\n\nconst useScrollPosition = (\n  effect: (pos: number) => void,\n  wait: number,\n  deps: any[], // eslint-disable-line\n  element?: React.RefObject<React.ReactNode>\n): void => {\n  let throttleTimeout = null\n\n  const callback = (): void => {\n    effect(getScrollPosition(element))\n    throttleTimeout = null\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return\n    }\n\n    const handleScroll = (): void => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callback, wait)\n        }\n      } else {\n        callback()\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return (): void => window.removeEventListener('scroll', handleScroll)\n  }, deps || [])\n}\n\nexport default useScrollPosition\n","import React, { useState, useLayoutEffect, createRef } from 'react'\n\nimport useScrollPosition from 'utils/hooks/useScrollPosition'\n\nconst SCROLL_BUFFER = 300\nconst INITIAL_COUNT = 24\nconst INCREMENT = 8\n\nconst isBrowser = typeof window !== `undefined`\n\ninterface Props {\n  items: object[]\n  renderItem: (item: object) => React.ReactNode\n}\n\nconst InfiniteScroll: React.FC<Props> = ({ items, renderItem }) => {\n  const anchorRef = createRef()\n  const [itemsToShow, setItemsToShow] = useState(INITIAL_COUNT)\n\n  useLayoutEffect(() => {\n    setItemsToShow(INITIAL_COUNT)\n  }, [items.length])\n\n  useScrollPosition(\n    (pos) => {\n      if (pos < 400 && itemsToShow < items.length)\n        setItemsToShow(itemsToShow + INCREMENT)\n    },\n    SCROLL_BUFFER,\n    [itemsToShow, items.length],\n    anchorRef\n  )\n\n  return (\n    <>\n      {items.slice(0, isBrowser ? itemsToShow : items.length).map(renderItem)}\n      <span ref={anchorRef as React.LegacyRef<HTMLSpanElement>} />\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react'\nimport styled, { SimpleInterpolation } from 'styled-components'\nimport { Link, navigate } from 'gatsby'\n\nimport { BookCardType } from 'types/book'\nimport Image, { ImageColor } from 'components/Image'\nimport StarRating from 'components/StarRating'\nimport ArrowIcon from 'components/icons/ArrowIcon'\nimport { FONT, COLOR, BORDER_RADIUS } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\n\ninterface BookCardProps {\n  $big: boolean\n}\n\nconst StyledBookCard = styled(\n  ({ $big, ...props }) => <Link {...props} /> // eslint-disable-line\n)<BookCardProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  margin: 0;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n  outline: 0 !important;\n  --perspective: 800px;\n  --book-pages-color: #afbdbb;\n\n  ${({ $big }): SimpleInterpolation =>\n    $big &&\n    screenMin.m`\n    --perspective: 1600px;\n    `}\n  }\n`\n\nconst StyledImgWrapper = styled.figure`\n  max-width: 100%;\n  height: 150px;\n  margin: 0.5em;\n  background: var(--book-pages-color);\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n  transform: scale(var(--book-scale));\n\n  *::selection {\n    background: var(--primary-color);\n    color: ${COLOR.BACKGROUND_LIGHT};\n  }\n\n  ${screenMin.m`\n    &[data-big='true'] {\n      height: 350px;\n    }\n  `}\n`\n\nconst StyledImg = styled(Image)`\n  height: 100%;\n  vertical-align: bottom;\n  transition: transform 0.3s ease-out;\n  transform-origin: 0 50%;\n  box-shadow: 0 0 0.3em rgba(0, 0, 0, 0.05);\n  transform: perspective(var(--perspective)) rotateY(0);\n\n  img {\n    height: 100%;\n    width: auto;\n  }\n\n  a:hover &,\n  a:focus & {\n    transition: transform 0.15s ease-out;\n    transform: perspective(var(--perspective)) rotateY(-30deg);\n  }\n\n  a:active & {\n    transition: transform 0.5s ease-out;\n    transform: perspective(var(--perspective)) rotateY(-80deg);\n  }\n`\n\nconst StyledAccessibilityTitle = styled.figcaption`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: ${FONT.SIZE.S};\n  color: transparent;\n  padding: 0.5em;\n  display: flex;\n  place-items: center;\n`\n\nconst StyledMeta = styled.div`\n  margin: 0 0 1em;\n  font-size: ${FONT.SIZE.XS};\n  line-height: 1;\n  text-align: center;\n\n  & > * + * {\n    margin-top: 0.25em;\n  }\n`\n\nconst StyledVideoLink = styled.button`\n  display: inline-block;\n  font-weight: ${FONT.WEIGHT.BOLD};\n  padding: 0.25em 0.5em;\n  transition: transform 150ms linear;\n\n  &:hover {\n    transform: translate(-0.1em, 0);\n  }\n\n  &::selection {\n    background: transparent;\n  }\n`\n\ninterface Props {\n  book: BookCardType\n  featured?: boolean\n  big?: boolean\n  hideDetails?: boolean\n  className?: string\n}\n\nconst BookCard: React.FC<Props> = ({\n  book,\n  featured,\n  big,\n  hideDetails,\n  className,\n}) => {\n  return (\n    <StyledBookCard\n      to={book.slug}\n      $big={big}\n      style={\n        {\n          background: hideDetails\n            ? book.image.childImageColors.darkVibrant\n            : featured && book.image.childImageColors.lightMuted,\n          color: book.image.childImageColors.darkVibrant,\n          '--primary-color': book.image.childImageColors.vibrant,\n          '--secondary-color': book.image.childImageColors.darkVibrant,\n          '--book-pages-color': featured && book.image.childImageColors.muted,\n          '--book-scale': ((book.bookHeight || 198) / 220).toFixed(2),\n        } as object\n      }\n      className={className}\n      title={`${book.title} by ${book.author}`}\n    >\n      <StyledImgWrapper data-big={big}>\n        <StyledImg image={book.image} background={ImageColor.Muted} />\n        <StyledAccessibilityTitle>\n          <span>\n            {book.title} by {book.author}\n          </span>\n        </StyledAccessibilityTitle>\n      </StyledImgWrapper>\n      {!hideDetails && (book.rating7 || book.video) && (\n        <StyledMeta>\n          {book.video && (\n            <StyledVideoLink\n              onClick={(e): void => {\n                e.preventDefault()\n                navigate(book.video.slug)\n              }}\n            >\n              Video review\n              <ArrowIcon />\n            </StyledVideoLink>\n          )}\n          {book.rating7 && <StarRating of7={book.rating7} />}\n        </StyledMeta>\n      )}\n    </StyledBookCard>\n  )\n}\n\nexport default BookCard\n","import { Book } from 'types/book'\n\nexport const getBookDetailsFromString = (\n  text: string\n): Pick<Book, 'title' | 'author'> | undefined => {\n  const referenceMatch = text.match(/^(.+), (.+)$/)\n  return (\n    referenceMatch && {\n      title: referenceMatch[1],\n      author: referenceMatch[2],\n    }\n  )\n}\n\nexport const formatBookDetails = ({\n  title,\n  author,\n}: Pick<Book, 'title' | 'author'>): string => `${title} by ${author}`\n\nexport const stripHtml = (text: string): string =>\n  text\n    .replace(/<\\/[^>]+><[^>/]+>/gm, ' ')\n    .replace(/<\\/?[^>]+>/g, '')\n    .replace(/ +/gm, ' ')\n    .trim()\n\nexport const sortAlphabetically = (strings: string[]): string[] =>\n  strings.sort((a, b) => (a < b ? -1 : a > b ? 1 : 0))\n","interface Query {\n  edges: {\n    node: object\n  }[]\n}\n\nexport const normalizeArray = (query: Query): object[] =>\n  query.edges.map((query) => query.node)\n","import { sortAlphabetically } from 'utils/formatting/text'\n\nexport type TagPrefix = 'type' | 'genre' | 'sub'\n\nconst tagPrefixNames = {\n  type: 'Type',\n  genre: 'Genre',\n  sub: 'Subject',\n}\n\nexport interface BookWithTags {\n  tags: string[]\n}\n\nexport const splitTagByPrefix = (tag: string): [string, string, string] => {\n  const parts = tag.split('-')\n  return [parts[0], parts.slice(1).join('-'), tag]\n}\n\nexport const splitTagsByPrefix = (\n  tags: string[]\n): {\n  prefix: string\n  values: {\n    name: string\n    unprefixed: string\n  }[]\n}[] => {\n  const resultMap = tags\n    .map(splitTagByPrefix)\n    .reduce((prev, [prefix, name, unprefixed]) => {\n      const value = { name, unprefixed }\n      if (prev[prefix]) {\n        prev[prefix].push(value)\n      } else {\n        prev[prefix] = [value]\n      }\n      return prev\n    }, {})\n\n  return Object.keys(tagPrefixNames)\n    .filter((p) => resultMap[p])\n    .map((prefix) => ({\n      prefix: tagPrefixNames[prefix],\n      values: resultMap[prefix],\n    }))\n}\n\nexport const getTagsFromBooks = (\n  books: BookWithTags[],\n  prefix?: TagPrefix\n): string[] => {\n  const tags = []\n  books.forEach((b) => tags.push(...b.tags))\n  const dedupedTags = [...new Set(tags)]\n  const orderedTags = sortAlphabetically(dedupedTags)\n\n  if (!prefix) return orderedTags\n\n  return orderedTags\n    .filter((tag) => tag.startsWith(`${prefix}-`))\n    .map((tag) => tag.slice(prefix.length + 1))\n}\n\nexport const filterBooksByTags = (\n  books: BookWithTags[],\n  filterType?: string,\n  filterGenre?: string,\n  filterSubject?: string,\n  ignorePrefix?: TagPrefix\n): BookWithTags[] => {\n  let filteredBooks = books\n  if (filterType && ignorePrefix !== 'type')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`type-${filterType}`)\n    )\n  if (filterGenre && ignorePrefix !== 'genre')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`genre-${filterGenre}`)\n    )\n  if (filterSubject && ignorePrefix !== 'sub')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`sub-${filterSubject}`)\n    )\n\n  return filteredBooks\n}\n","import React, { useEffect, useRef } from 'react'\n\nconst useClickOutside = (\n  shouldWatch: boolean,\n  onClickOut: () => void\n): [React.MutableRefObject<undefined>] => {\n  const element = useRef()\n\n  const handleClick = ({ clientX, clientY }: MouseEvent): void => {\n    if (!element || !element.current) return\n\n    const { top, bottom, left, right } = element.current.getBoundingClientRect()\n\n    if (\n      clientX < left ||\n      clientX > right ||\n      clientY < top ||\n      clientY > bottom\n    ) {\n      onClickOut()\n    }\n  }\n\n  useEffect(() => {\n    if (shouldWatch) {\n      window.addEventListener('click', handleClick)\n    } else {\n      window.removeEventListener('click', handleClick)\n    }\n    return (): void => {\n      if (shouldWatch) window.removeEventListener('click', handleClick)\n    }\n  }, [shouldWatch])\n\n  return [element]\n}\n\nexport default useClickOutside\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  COLOR,\n  FONT,\n  BORDER_RADIUS,\n  FILTER_UNDERLINE_STYLE,\n} from 'styles/tokens'\nimport useClickOutside from 'utils/hooks/useClickOutside'\n\nconst StyledWrapper = styled.span`\n  position: relative;\n  display: inline-block;\n`\n\nconst StyledOptions = styled.ol`\n  position: absolute;\n  background: ${COLOR.BACKGROUND_LIGHT};\n  border-radius: ${BORDER_RADIUS.M};\n  border: 1px solid ${COLOR.BACKGROUND_DARK};\n  box-shadow: 0 2px 8px ${COLOR.SHADOW}20;\n  min-width: 11em;\n  max-height: 20.5em;\n  top: -0.25rem;\n  left: -0.5rem;\n  margin: -1px; /* counteract border */\n  padding: 0 0 0.25rem;\n  z-index: 1;\n  line-height: 1.25;\n  overflow: auto;\n\n  ::-webkit-scrollbar {\n    width: 0.25em;\n    border-radius: 0 ${BORDER_RADIUS.S} ${BORDER_RADIUS.S} 0;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${COLOR.BACKGROUND_DARK};\n  }\n`\n\ninterface OptionProps {\n  $default?: boolean\n}\nconst StyledOption = styled.li<OptionProps>`\n  padding: 0.125rem 0.5rem;\n  font-size: ${FONT.SIZE.S};\n  cursor: pointer;\n  user-select: none;\n\n  ${({ $default }): string =>\n    $default &&\n    `\n    ${FILTER_UNDERLINE_STYLE};\n  `}\n\n  &:first-child {\n    ${FILTER_UNDERLINE_STYLE};\n    font-style: italic;\n    font-size: ${FONT.SIZE.M};\n    padding: 0.25rem 0.5rem;\n    line-height: 1.5;\n  }\n\n  &:nth-child(n + 2):hover {\n    background: ${COLOR.SHADOW}10;\n  }\n`\n\nconst StyledTrigger = styled.span`\n  ${FILTER_UNDERLINE_STYLE};\n  font-style: italic;\n  cursor: pointer;\n  user-select: none;\n`\n\ninterface Props {\n  value?: string\n  defaultLabel: string\n  options: string[]\n  onChange: (value: string | string[]) => void\n}\n\nconst FilterTrigger: React.FC<Props> = ({\n  value,\n  defaultLabel,\n  options,\n  onChange,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [wrapperElement] = useClickOutside(isOpen, () => setIsOpen(false))\n  const text = value || defaultLabel\n\n  const handleChange = (newValue: string): void => {\n    setIsOpen(false)\n\n    if (!newValue) return onChange(undefined)\n\n    return onChange(newValue)\n  }\n\n  const optionsList = value ? options.filter((o) => o !== value) : options\n  if (!optionsList || optionsList.length === 0)\n    return <>{value || defaultLabel}</>\n\n  return (\n    <StyledWrapper ref={wrapperElement}>\n      <StyledTrigger onClick={(): void => setIsOpen(!isOpen)}>\n        {text}\n      </StyledTrigger>\n\n      {isOpen && (\n        <StyledOptions>\n          <StyledOption onClick={(): void => setIsOpen(false)}>\n            {text}\n          </StyledOption>\n          {defaultLabel !== text && (\n            <StyledOption\n              onClick={(): void => handleChange(undefined)}\n              $default\n            >\n              {defaultLabel}\n            </StyledOption>\n          )}\n          {optionsList.map((option) => (\n            <StyledOption\n              key={option}\n              onClick={(): void => handleChange(option)}\n            >\n              {option}\n            </StyledOption>\n          ))}\n        </StyledOptions>\n      )}\n    </StyledWrapper>\n  )\n}\n\nexport default FilterTrigger\n","import React, { useState, useEffect } from 'react'\nimport { navigate } from '@reach/router'\nimport qs from 'qs'\n\ninterface Param {\n  key: string\n  value?: string\n  setter: React.Dispatch<string>\n}\n\nconst useQueryParamSync = (\n  pagePath: string,\n  searchString: string,\n  params: Param[]\n): [boolean] => {\n  const [isInitialising, setIsInitialising] = useState(true)\n\n  const query = qs.parse(searchString, {\n    ignoreQueryPrefix: true,\n    comma: true,\n  })\n\n  useEffect(() => {\n    params.forEach(({ setter, key }) => {\n      setter(query[key] as string)\n    })\n    setIsInitialising(false)\n  }, [])\n\n  // update values to match query\n  useEffect(() => {\n    params.forEach(({ key, value, setter }) => {\n      if (query[key] !== value) {\n        setter(query[key] as string)\n      }\n    })\n  }, [searchString])\n\n  // update query to match values\n  useEffect(\n    () => {\n      // only after initialisation so it doesn't reset query before initial filtering\n      if (!isInitialising) {\n        const newQuery = {}\n        params.forEach(({ key, value }) => {\n          newQuery[key] = value\n        })\n\n        const newQueryString = qs.stringify(newQuery, {\n          addQueryPrefix: true,\n          arrayFormat: 'comma',\n          encode: false,\n        })\n\n        if (newQueryString !== searchString) {\n          navigate(`${pagePath}${newQueryString}`)\n        }\n      }\n    },\n    params.map(({ value }) => value)\n  )\n\n  return [isInitialising]\n}\n\nexport default useQueryParamSync\n","import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\nimport styled, { SimpleInterpolation } from 'styled-components'\n\nimport { PageProps } from 'types/page'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { BookCardType } from 'types/book'\nimport { COLOR, FONT } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\nimport Link from 'components/links/Link'\nimport BookCard from 'components/cards/BookCard'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport InfiniteScroll from 'components/InfiniteScroll'\nimport { getTagsFromBooks, filterBooksByTags, TagPrefix } from 'utils/tags'\nimport FilterTrigger from './FilterTrigger'\nimport PATHS from 'routes/paths'\nimport useQueryParamSync from 'utils/hooks/useQueryParamSync'\n\ninterface BookProps {\n  big: boolean\n}\n\nconst StyledDetails = styled(GridItem)`\n  background: ${COLOR.BACKGROUND_LIGHT};\n  padding: 1em;\n`\n\nconst StyledBook = styled(GridItem)<BookProps>`\n  ${({ big }): SimpleInterpolation => screenMin.m`\n    font-size: ${big ? '1.25em' : FONT.SIZE.S};\n  `}\n`\n\nconst StyledClearFilterButton = styled(Link)`\n  font-size: 0.75em;\n`\n\ninterface BookCardTypeWithTags extends BookCardType {\n  tags: string[]\n}\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardTypeWithTags\n      }[]\n    }\n  }\n}\n\nconst BookListPage: React.FC<Props> = ({ data: { bookData }, location }) => {\n  const books = normalizeArray(bookData) as BookCardTypeWithTags[]\n\n  const [filterType, setFilterType] = useState(undefined)\n  const [filterGenre, setFilterGenre] = useState(undefined)\n  const [filterSubject, setFilterSubject] = useState(undefined)\n\n  const [isInitialisingFilter] = useQueryParamSync(\n    PATHS.BOOKS,\n    location.search,\n    [\n      {\n        key: 'type',\n        value: filterType,\n        setter: setFilterType,\n      },\n      {\n        key: 'genre',\n        value: filterGenre,\n        setter: setFilterGenre,\n      },\n      {\n        key: 'sub',\n        value: filterSubject,\n        setter: setFilterSubject,\n      },\n    ]\n  )\n\n  const filteredBooks = filterBooksByTags(\n    books,\n    filterType,\n    filterGenre,\n    filterSubject\n  )\n\n  const hasFilter = filterType || filterGenre || filterSubject\n\n  const getOptions = (prefix: TagPrefix): string[] => {\n    const optionBooks = hasFilter\n      ? filterBooksByTags(books, filterType, filterGenre, filterSubject, prefix)\n      : books\n    return getTagsFromBooks(optionBooks, prefix)\n  }\n\n  return (\n    <Layout\n      location={location}\n      navOpenOnDesktop\n      navTitle=\"Book reviews\"\n      title=\"Book reviews\"\n    >\n      {(!isInitialisingFilter || location.search === '') && (\n        <Grid as=\"ol\" full>\n          <StyledDetails span={2} spanFromM={6} spanFromL={4}>\n            <p>\n              Showing {filteredBooks.length} {}\n              {filteredBooks.length === 1 ? 'book' : 'books'}\n              <br />\n              <FilterTrigger\n                value={filterType}\n                defaultLabel=\"fiction and non-fiction\"\n                options={getOptions('type')}\n                trackingCategory=\"type\"\n                onChange={setFilterType}\n              />\n              <br />\n              in {}\n              <FilterTrigger\n                value={filterGenre}\n                defaultLabel=\"any genre\"\n                options={getOptions('genre')}\n                trackingCategory=\"genre\"\n                onChange={setFilterGenre}\n              />\n              <br />\n              about {}\n              <FilterTrigger\n                value={filterSubject}\n                defaultLabel=\"any subject\"\n                options={getOptions('sub')}\n                trackingCategory=\"sub\"\n                onChange={setFilterSubject}\n              />\n              {hasFilter && (\n                <>\n                  <br />\n                  <StyledClearFilterButton\n                    as=\"button\"\n                    onClick={(): void => {\n                      setFilterType(undefined)\n                      setFilterGenre(undefined)\n                      setFilterSubject(undefined)\n                    }}\n                  >\n                    clear filter\n                  </StyledClearFilterButton>\n                </>\n              )}\n            </p>\n          </StyledDetails>\n\n          <InfiniteScroll\n            items={filteredBooks}\n            renderItem={(book: BookCardType): React.ReactNode => {\n              const big = book.rating7 >= 6\n              return (\n                <StyledBook\n                  big={big}\n                  as=\"li\"\n                  key={book.id}\n                  span={1}\n                  spanFromM={big ? 6 : 3}\n                  spanFromL={big ? 4 : 2}\n                  spanRowsFromM={big ? 2 : 1}\n                >\n                  <BookCard book={book} featured={big} big={big} />\n                </StyledBook>\n              )\n            }}\n          />\n        </Grid>\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BookListPage {\n    bookData: allBook(sort: { sortingDate: DESC }) {\n      edges {\n        node {\n          ...BookCardFields\n          tags\n        }\n      }\n    }\n  }\n`\n\nexport default BookListPage\n"],"names":["window","useLayoutEffect","useEffect","isBrowser","effect","wait","deps","element","throttleTimeout","callback","current","document","body","getBoundingClientRect","bottom","innerHeight","getScrollPosition","useIsomorphicLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","_ref","items","renderItem","anchorRef","createRef","itemsToShow","setItemsToShow","useState","length","useScrollPosition","pos","React","slice","map","ref","StyledBookCard","styled","$big","props","Link","COLOR","BORDER_RADIUS","_ref2","screenMin","StyledImgWrapper","StyledImg","Image","StyledAccessibilityTitle","FONT","StyledMeta","StyledVideoLink","_ref3","book","featured","big","hideDetails","className","to","slug","style","background","image","childImageColors","darkVibrant","lightMuted","color","vibrant","muted","bookHeight","toFixed","title","author","ImageColor","rating7","video","onClick","e","preventDefault","navigate","ArrowIcon","StarRating","of7","stripHtml","text","replace","trim","sortAlphabetically","strings","sort","a","b","normalizeArray","query","edges","node","tagPrefixNames","type","genre","sub","splitTagByPrefix","tag","parts","split","join","splitTagsByPrefix","tags","resultMap","reduce","prev","prefix","name","unprefixed","value","push","Object","keys","filter","p","values","getTagsFromBooks","books","forEach","dedupedTags","Set","orderedTags","startsWith","filterBooksByTags","filterType","filterGenre","filterSubject","ignorePrefix","filteredBooks","includes","shouldWatch","onClickOut","useRef","handleClick","clientX","clientY","top","left","right","StyledWrapper","StyledOptions","StyledOption","$default","FILTER_UNDERLINE_STYLE","StyledTrigger","defaultLabel","options","onChange","isOpen","setIsOpen","wrapperElement","useClickOutside","handleChange","newValue","undefined","optionsList","o","option","key","pagePath","searchString","params","isInitialising","setIsInitialising","qs","ignoreQueryPrefix","comma","setter","newQuery","newQueryString","addQueryPrefix","arrayFormat","encode","_ref4","StyledDetails","GridItem","displayName","componentId","StyledBook","StyledClearFilterButton","data","bookData","location","setFilterType","setFilterGenre","setFilterSubject","isInitialisingFilter","useQueryParamSync","PATHS","search","hasFilter","getOptions","optionBooks","Layout","navOpenOnDesktop","navTitle","Grid","as","full","span","spanFromM","spanFromL","FilterTrigger","trackingCategory","InfiniteScroll","id","spanRowsFromM","BookCard"],"sourceRoot":""}