{"version":3,"file":"component---src-views-video-list-page-index-tsx-6215cf77d3f6f4c060bb.js","mappings":"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","sources":["webpack://chareads.com/./src/utils/hooks/useIsomorphicLayoutEffect.ts","webpack://chareads.com/./src/utils/hooks/useScrollPosition.ts","webpack://chareads.com/./src/components/InfiniteScroll/index.tsx","webpack://chareads.com/./src/components/icons/PlayIcon.tsx","webpack://chareads.com/./src/components/cards/VideoCard/index.tsx","webpack://chareads.com/./src/utils/graphql/normalize.ts","webpack://chareads.com/./src/views/VideoListPage/index.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst isBrowser = typeof window !== `undefined`\n\nconst getScrollPosition = (\n  element: React.RefObject<React.ReactNode>\n): number => {\n  if (!isBrowser) return 0\n\n  const target = (element.current || document.body) as HTMLElement\n  return target.getBoundingClientRect().bottom - window.innerHeight\n}\n\nconst useScrollPosition = (\n  effect: (pos: number) => void,\n  wait: number,\n  deps: any[], // eslint-disable-line\n  element?: React.RefObject<React.ReactNode>\n): void => {\n  let throttleTimeout = null\n\n  const callback = (): void => {\n    effect(getScrollPosition(element))\n    throttleTimeout = null\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return\n    }\n\n    const handleScroll = (): void => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callback, wait)\n        }\n      } else {\n        callback()\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return (): void => window.removeEventListener('scroll', handleScroll)\n  }, deps || [])\n}\n\nexport default useScrollPosition\n","import React, { useState, useLayoutEffect, createRef } from 'react'\n\nimport useScrollPosition from 'utils/hooks/useScrollPosition'\n\nconst SCROLL_BUFFER = 300\nconst INITIAL_COUNT = 24\nconst INCREMENT = 8\n\nconst isBrowser = typeof window !== `undefined`\n\ninterface Props {\n  items: object[]\n  renderItem: (item: object) => React.ReactNode\n}\n\nconst InfiniteScroll: React.FC<Props> = ({ items, renderItem }) => {\n  const anchorRef = createRef()\n  const [itemsToShow, setItemsToShow] = useState(INITIAL_COUNT)\n\n  useLayoutEffect(() => {\n    setItemsToShow(INITIAL_COUNT)\n  }, [items.length])\n\n  useScrollPosition(\n    (pos) => {\n      if (pos < 400 && itemsToShow < items.length)\n        setItemsToShow(itemsToShow + INCREMENT)\n    },\n    SCROLL_BUFFER,\n    [itemsToShow, items.length],\n    anchorRef\n  )\n\n  return (\n    <>\n      {items.slice(0, isBrowser ? itemsToShow : items.length).map(renderItem)}\n      <span ref={anchorRef as React.LegacyRef<HTMLSpanElement>} />\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nconst PlayIcon: React.FC<Props> = ({ className }) => (\n  <svg viewBox=\"0 0 11 14\" className={className}>\n    <path d=\"M9.2,6.2l-7.5-5c-0.5-0.3-1.2,0-1.2,0.6v10.3c0,0.6,0.7,1,1.2,0.6l7.5-5C9.8,7.4,9.8,6.6,9.2,6.2z\" />\n  </svg>\n)\n\nexport default PlayIcon\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport YouTubePlayer from 'react-player/lib/players/YouTube'\n\nimport { VideoCardType } from 'types/video'\nimport {\n  shortFormatDate,\n  unformatTimestamp,\n  formatTimestamp,\n} from 'utils/formatting/time'\nimport { formatViewCount } from 'utils/formatting/numbers'\nimport H from 'components/H'\nimport { COLOR, FONT, BORDER_RADIUS } from 'styles/tokens'\nimport Image, { ImageColor } from 'components/Image'\nimport StarRating from 'components/StarRating'\nimport AspectRatioWrapper from 'components/AspectRatioWrapper'\nimport PlayIcon from 'components/icons/PlayIcon'\nimport { HideOnPercy } from 'components/HideOnPercy'\n\nconst YouTubePlayerConfig = {\n  youtube: {\n    playerVars: {\n      rel: 0,\n      controls: 1,\n      autoplay: 1,\n    },\n  },\n}\n\nconst StyledVideoCard = styled(Link)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n`\n\nconst StyledPlayButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  padding: 0.5em 0.6em;\n  line-height: 0;\n`\n\nconst StyledPlayIcon = styled(PlayIcon)`\n  width: 1em;\n  fill: ${COLOR.BACKGROUND_LIGHT};\n  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.1));\n`\n\nconst StyledDuration = styled.aside`\n  position: absolute;\n  bottom: 0.25em;\n  right: 0.25em;\n  padding: 0 0.375em;\n  border-radius: 2px;\n  background: #00000088;\n  color: #ffffffcc;\n  font-size: ${({ $big }) => ($big ? FONT.SIZE.XS : FONT.SIZE.XXS)};\n`\n\nconst StyledImg = styled(Image)`\n  width: 100%;\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n`\n\nconst StyledDetails = styled.div`\n  padding: 0.5em 0.5em 0.3em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 4.8em;\n`\n\nconst StyledTimestamp = styled.p`\n  font-size: ${FONT.SIZE.S};\n  margin: 0;\n`\n\nconst StyledMeta = styled.p`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap-reverse;\n  font-size: ${FONT.SIZE.XS};\n  margin: 0;\n  opacity: 0.5;\n`\n\nconst StyledDatePublished = styled.time`\n  margin-right: 0.5em;\n`\n\nconst StyledH = styled(H)`\n  margin: 0;\n`\n\ninterface BookContentsProps {\n  isStars: boolean\n}\n\nconst StyledBookContentsWrapper = styled.div<BookContentsProps>`\n  font-size: ${({ isStars }): string =>\n    isStars ? FONT.SIZE.XXS : FONT.SIZE.XS};\n  margin: ${({ isStars }): number => (isStars ? 0.4 : 0.2)}em 0;\n  opacity: 0.75;\n`\n\ninterface Props {\n  video: VideoCardType\n  featured?: boolean\n  timestamp?: string\n  big?: boolean\n  playsInline?: boolean\n  hideOwnedByRating?: boolean\n  className?: string\n}\n\nconst VideoCard: React.FC<Props> = ({\n  video,\n  featured,\n  timestamp,\n  big,\n  playsInline,\n  hideOwnedByRating,\n  className,\n}) => {\n  const [playVideo, setPlayVideo] = useState(false)\n  const featuredBookCount =\n    (video.timestamps || []).filter((t) => t.book && t.book.id).length +\n    (video.ownedBy ? 1 : 0)\n\n  return (\n    <StyledVideoCard\n      to={timestamp ? `${video.slug}?at=${timestamp}` : video.slug}\n      style={\n        {\n          background: featured && video.image.childImageColors.lightVibrant,\n          color: featured && video.image.childImageColors.darkMuted,\n          '--primary-color': video.image.childImageColors.vibrant,\n        } as object\n      }\n      className={className}\n    >\n      <AspectRatioWrapper\n        style={{ backgroundColor: video.image.childImageColors.muted }}\n      >\n        {playVideo ? (\n          <YouTubePlayer\n            url={`https://www.youtube.com/watch?v=${video.youtubeId}${\n              timestamp && `&t=${unformatTimestamp(timestamp)}`\n            }`}\n            config={YouTubePlayerConfig}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        ) : (\n          <div>\n            {playsInline && (\n              <StyledPlayButton\n                onClick={(e): void => {\n                  e.preventDefault()\n                  setPlayVideo(true)\n                }}\n              >\n                <StyledPlayIcon />\n              </StyledPlayButton>\n            )}\n            <StyledImg image={video.image} background={ImageColor.Muted} />\n            <StyledDuration $big={big} aria-label=\"duration\">\n              {formatTimestamp(video.duration)}\n            </StyledDuration>\n          </div>\n        )}\n      </AspectRatioWrapper>\n      <StyledDetails>\n        <div>\n          {timestamp && (\n            <StyledTimestamp>Featured at {timestamp} in</StyledTimestamp>\n          )}\n          <StyledH as=\"h2\" size=\"S\">\n            {video.title}\n          </StyledH>\n\n          <StyledBookContentsWrapper isStars={!!video.ownedBy}>\n            {video.ownedBy && !hideOwnedByRating\n              ? video.ownedBy.rating7 && (\n                  <StarRating of7={video.ownedBy.rating7} />\n                )\n              : !timestamp &&\n                featuredBookCount > 1 && (\n                  <>\n                    Featuring {featuredBookCount} book\n                    {featuredBookCount > 1 && 's'}\n                  </>\n                )}\n          </StyledBookContentsWrapper>\n        </div>\n        <StyledMeta>\n          <StyledDatePublished>\n            {shortFormatDate(video.datePublished)}\n          </StyledDatePublished>\n          <HideOnPercy>\n            {video.viewCount >\n              parseInt(process.env.GATSBY_YOUTUBE_VIEWS_MINIMUM_VISIBLE) && (\n              <span>{formatViewCount(video.viewCount)}</span>\n            )}\n          </HideOnPercy>\n        </StyledMeta>\n      </StyledDetails>\n    </StyledVideoCard>\n  )\n}\n\nexport default VideoCard\n","interface Query {\n  edges: {\n    node: object\n  }[]\n}\n\nexport const normalizeArray = (query: Query): object[] =>\n  query.edges.map((query) => query.node)\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { PageProps } from 'types/page'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { VideoCardType } from 'types/video'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport VideoCard from 'components/cards/VideoCard'\nimport InfiniteScroll from 'components/InfiniteScroll'\n\ninterface Props extends PageProps {\n  data: {\n    videoData: {\n      edges: {\n        node: VideoCardType\n      }[]\n    }\n  }\n}\n\nconst VideoListPage: React.FC<Props> = ({ data: { videoData }, location }) => {\n  const videos = normalizeArray(videoData) as VideoCardType[]\n\n  return (\n    <Layout\n      location={location}\n      navOpenOnDesktop\n      navTitle=\"Bookish videos\"\n      title=\"Videos\"\n    >\n      <Grid as=\"ol\" full>\n        <InfiniteScroll\n          items={videos}\n          renderItem={(video: VideoCardType): React.ReactNode => (\n            <GridItem\n              as=\"li\"\n              key={video.id}\n              span={1}\n              spanFromM={video.featured ? 6 : 3}\n              spanFromL={video.featured ? 4 : 2}\n            >\n              <VideoCard\n                video={video}\n                featured={video.featured}\n                big={video.featured}\n              />\n            </GridItem>\n          )}\n        />\n      </Grid>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query VideoListPage {\n    videoData: allVideo(sort: { datePublished: DESC }) {\n      edges {\n        node {\n          ...VideoCardFields\n        }\n      }\n    }\n  }\n`\n\nexport default VideoListPage\n"],"names":["window","useLayoutEffect","useEffect","isBrowser","effect","wait","deps","element","throttleTimeout","callback","current","document","body","getBoundingClientRect","bottom","innerHeight","getScrollPosition","useIsomorphicLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","_ref","items","renderItem","anchorRef","createRef","itemsToShow","setItemsToShow","useState","length","useScrollPosition","pos","React","slice","map","ref","className","viewBox","d","YouTubePlayerConfig","youtube","playerVars","rel","controls","autoplay","StyledVideoCard","styled","Link","COLOR","BORDER_RADIUS","StyledPlayButton","StyledPlayIcon","PlayIcon","StyledDuration","$big","FONT","StyledImg","Image","StyledDetails","StyledTimestamp","StyledMeta","StyledDatePublished","StyledH","H","StyledBookContentsWrapper","_ref2","isStars","_ref3","_ref4","video","featured","timestamp","big","playsInline","hideOwnedByRating","playVideo","setPlayVideo","featuredBookCount","timestamps","filter","t","book","id","ownedBy","to","slug","style","background","image","childImageColors","lightVibrant","color","darkMuted","vibrant","AspectRatioWrapper","backgroundColor","muted","YouTubePlayer","url","youtubeId","unformatTimestamp","config","width","height","onClick","e","preventDefault","ImageColor","formatTimestamp","duration","as","size","title","rating7","StarRating","of7","shortFormatDate","datePublished","HideOnPercy","viewCount","parseInt","process","GATSBY_YOUTUBE_VIEWS_MINIMUM_VISIBLE","formatViewCount","normalizeArray","query","edges","node","data","videoData","location","videos","Layout","navOpenOnDesktop","navTitle","Grid","full","InfiniteScroll","GridItem","key","span","spanFromM","spanFromL","VideoCard"],"sourceRoot":""}