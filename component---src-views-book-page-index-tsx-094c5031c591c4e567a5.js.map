{"version":3,"file":"component---src-views-book-page-index-tsx-094c5031c591c4e567a5.js","mappings":"mLAEO,MAAMA,EAAa,CACxBC,UAAW,KACXC,OAAQ,OACRC,aAAc,M,oCCIhB,MAAMC,EAAoB,CACxB,CAACJ,EAAWC,WAAY,mBACxB,CAACD,EAAWE,QAAS,gBACrB,CAACF,EAAWG,cAAe,uBAGvBE,EAAWC,EAAAA,QAAAA,GAAAA,WAAS,oEAATA,CAAS,sBACXC,EAAAA,GAAAA,KAAAA,EAEXC,EAAAA,GAAAA,EAAW,qDAKTC,GAAkBH,EAAAA,EAAAA,SAAOI,EAAAA,GAAU,sFAAjBJ,CAAiB,0BAmBzC,MAbwCK,IAAAA,IAAC,MAAEC,GAAO,SAChDC,EAAAA,cAAAA,KAAAA,KACGC,OAAOC,QAAQX,GAAmBY,KAAIC,IAAAA,IAAEC,EAAeC,GAAM,SAC5DN,EAAAA,cAACR,EAAQ,CAACe,IAAKF,GACbL,EAAAA,cAAAA,IAAAA,CAAGQ,KAAMT,EAAMU,KAAKJ,IAClBL,EAAAA,cAACJ,EAAe,MACfU,GAEM,IAEV,C,wDCnCP,MAAMI,EAAkBjB,EAAAA,QAAAA,IAAAA,WAAU,0DAAVA,CAAU,2ZAC9BkB,EAAAA,EAIcC,EAAAA,GAAAA,gBAOaA,EAAAA,GAAAA,gBAMdlB,EAAAA,GAAAA,KAAAA,EAMAA,EAAAA,GAAAA,KAAAA,EAwBXiB,EAAAA,GAaN,K,wHCrDA,MAAME,EAAgBpB,EAAAA,QAAAA,IAAAA,WAAU,uEAAVA,CAAU,uBAI1BqB,GAAsBrB,EAAAA,EAAAA,SAAOsB,EAAAA,GAAS,wFAAhBtB,CAAgB,QACxCE,EAAAA,GAAAA,EAAW,+CAKTqB,GAAavB,EAAAA,EAAAA,SAAOwB,EAAAA,GAAK,+EAAZxB,CAAY,sBAChBC,EAAAA,GAAAA,KAAAA,EAEXwB,EAAAA,GAAAA,EAAQ,qFA6CZ,IAhCsCpB,IAA0C,IAAzC,MAAEqB,EAAK,cAAEC,EAAa,UAAEC,GAAW,EACxE,OAAKF,GAA0B,IAAjBA,EAAMG,OAGlBtB,EAAAA,cAACa,EAAa,KACZb,EAAAA,cAACgB,EAAU,CAACO,MAAI,GACdvB,EAAAA,cAACc,EAAmB,KAClBd,EAAAA,cAACwB,EAAAA,EAAC,CAACC,KAAK,IAAIC,GAAG,MAAK,kBAKrBP,EAAMhB,KAAKwB,IACV,MAAMC,EAAWP,EACbA,IAAcM,EAAKE,KACnBT,GAAiBA,EAAcU,SAASH,EAAKE,MAEjD,OACE7B,EAAAA,cAACe,EAAAA,EAAQ,CAACR,IAAKoB,EAAKI,GAAIC,KAAM,EAAGC,UAAW,EAAGC,UAAW,GACxDlC,EAAAA,cAACmC,EAAAA,EAAQ,CACPR,KAAMA,EACNC,SAAUA,EACVQ,YAAaf,IAAcM,EAAKE,OAEzB,MAvBoB,IA2BvB,C,yFC3DpB,MAAMQ,EAAuB5C,EAAAA,QAAAA,OAAAA,WAAa,+EAAbA,CAAa,sCAC3BC,EAAAA,GAAAA,KAAAA,EACEA,EAAAA,GAAAA,OAAAA,KAEb4C,EAAAA,GAAAA,EAAW,oEAMTC,EAAa9C,EAAAA,QAAAA,EAAAA,WAAQ,qEAARA,CAAQ,8TAsBvBK,IAAAA,IAAC,KAAE0C,GAAM,SACRA,GAAI,qFAKN,IA8BH,IAnBuCpC,IAAAA,IAAC,SACtCqC,EAAQ,KACRD,EAAI,OACJE,EAAM,QACNC,EAAO,UACPC,GACD,SACC5C,EAAAA,cAAC6C,EAAAA,EAAI,CACHF,QAASA,EACT,gBAAeH,EACf,gBAAeE,EACfhB,GAAIW,EACJO,UAAWA,GAEX5C,EAAAA,cAACuC,EAAU,CAACC,KAAMA,IACjBC,EACI,C,+CCrET,MAWMK,EAAgBrD,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,0IAXE,SAkB9BK,IAAAA,IAAC,OAAEiD,EAAM,gBAAEC,GAAiB,SAC3BD,IACAC,GAAe,iFAKjB,IAEC5C,IAAAA,IAAC,gBAAE4C,GAAiB,SACpBA,GAAe,+CAIhB,IAECC,IAAAA,IAAC,OAAEF,GAAQ,SACXA,GAAM,yBAGP,IAkDH,IAvCgCG,IAAgD,IAA/C,SAAET,EAAQ,KAAED,EAAI,OAAEE,EAAM,UAAEE,EAAS,GAAElB,GAAI,EACxE,MAAM,EAACqB,EAAO,EAACI,IAAaC,EAAAA,EAAAA,UAASZ,IAC/B,EAACQ,EAAgB,EAACK,IAAsBD,EAAAA,EAAAA,WAAS,IACjD,EAACE,EAAc,EAACC,IAAoBH,EAAAA,EAAAA,UAAS,MAC7CI,GAAYC,EAAAA,EAAAA,aAiBlB,OAfAC,EAAAA,EAAAA,YAAU,KACR,GAAIlB,EAAM,CACR,MAAMmB,EAAMH,EAAUI,QACtBL,EAAiBI,EAAIE,cACrBR,GAAmB,EACrB,MACEF,GAAU,GACVW,YAAW,IAAMT,GAAmB,IA9DR,IA+D9B,GACC,CAACb,KAEJkB,EAAAA,EAAAA,YAAU,KACJV,IAAoBD,GAAQe,YAAW,IAAMX,GAAU,IAAO,GAAG,GACpE,CAACH,IAGFhD,EAAAA,cAAC8C,EAAa,CACZF,UAAWA,EACXe,IAAKH,EACLT,OAAQA,EACRC,gBAAiBA,EACjBjB,GAAIW,EACJ,eAAcK,EACdrB,GAAIA,EACJqC,MAAO,CACLC,UAAWjB,GAAUO,IAGtBb,EACa,C,uHCxEpB,MAAMwB,GAAiBxE,EAAAA,EAAAA,UACrBK,IAAAA,IAAC,KAAEoE,KAASC,GAAO,SAAKnE,EAAAA,cAAC6C,EAAAA,GAASsB,EAAS,IAC5C,+EAFsB1E,CAEtB,wPASemB,EAAAA,GAAAA,gBACGwD,EAAAA,GAAAA,GAKfhE,IAAAA,IAAC,KAAE8D,GAAM,SACTA,GACAvE,EAAAA,GAAAA,EAAW,uDAEV,IAIC0E,EAAmB5E,EAAAA,QAAAA,OAAAA,WAAa,sEAAbA,CAAa,wNAUzBmB,EAAAA,GAAAA,iBAGTjB,EAAAA,GAAAA,EAAW,kFAOT2E,GAAY7E,EAAAA,EAAAA,SAAO8E,EAAAA,GAAM,0EAAb9E,CAAa,qbAyBzB+E,EAA2B/E,EAAAA,QAAAA,WAAAA,WAAiB,8EAAjBA,CAAiB,2JAOnCC,EAAAA,GAAAA,KAAAA,GAOT+E,EAAahF,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,+FAEdC,EAAAA,GAAAA,KAAAA,IASTgF,EAAkBjF,EAAAA,QAAAA,OAAAA,WAAa,qEAAbA,CAAa,6KAEpBC,EAAAA,GAAAA,OAAAA,MA2EjB,IAtDkCuD,IAM3B,IAN4B,KACjCtB,EAAI,SACJC,EAAQ,IACR+C,EAAG,YACHvC,EAAW,UACXQ,GACD,EACC,OACE5C,EAAAA,cAACiE,EAAc,CACbW,GAAIjD,EAAKE,KACTqC,KAAMS,EACNZ,MACE,CACEc,WAAYzC,EACRT,EAAKmD,MAAMC,iBAAiBC,YAC5BpD,GAAYD,EAAKmD,MAAMC,iBAAiBE,WAC5CC,MAAOvD,EAAKmD,MAAMC,iBAAiBC,YACnC,kBAAmBrD,EAAKmD,MAAMC,iBAAiBI,QAC/C,oBAAqBxD,EAAKmD,MAAMC,iBAAiBC,YACjD,qBAAsBpD,GAAYD,EAAKmD,MAAMC,iBAAiBK,MAC9D,iBAAkBzD,EAAK0D,YAAc,KAAO,KAAKC,QAAQ,IAG7D1C,UAAWA,EACX2C,MAAU5D,EAAK4D,MAAK,OAAO5D,EAAK6D,QAEhCxF,EAAAA,cAACqE,EAAgB,CAAC,WAAUM,GAC1B3E,EAAAA,cAACsE,EAAS,CAACQ,MAAOnD,EAAKmD,MAAOD,WAAYY,EAAAA,EAAAA,QAC1CzF,EAAAA,cAACwE,EAAwB,KACvBxE,EAAAA,cAAAA,OAAAA,KACG2B,EAAK4D,MAAM,OAAK5D,EAAK6D,WAI1BpD,IAAgBT,EAAK+D,SAAW/D,EAAKgE,QACrC3F,EAAAA,cAACyE,EAAU,KACR9C,EAAKgE,OACJ3F,EAAAA,cAAC0E,EAAe,CACd/B,QAAUiD,IACRA,EAAEC,kBACFC,EAAAA,EAAAA,IAASnE,EAAKgE,MAAM9D,KAAK,GAE5B,eAEC,gBAAChC,EAAAA,EAAS,OAGb8B,EAAK+D,SAAW1F,EAAAA,cAAC+F,EAAAA,EAAU,CAACC,IAAKrE,EAAK+D,WAG5B,C,sKC3KrB,MANkC5F,IAAAA,IAAC,UAAE8C,GAAW,SAC9C5C,EAAAA,cAAAA,MAAAA,CAAKiG,QAAQ,YAAYrD,UAAWA,GAClC5C,EAAAA,cAAAA,OAAAA,CAAMkG,EAAE,mGACJ,E,UCWR,MAAMC,EAAsB,CAC1BC,QAAS,CACPC,WAAY,CACVC,IAAK,EACLC,SAAU,EACVC,SAAU,KAKVC,GAAkBhH,EAAAA,EAAAA,SAAOoD,EAAAA,IAAK,iFAAZpD,CAAY,8GAMpBmB,EAAAA,GAAAA,gBACGwD,EAAAA,GAAAA,GAGbsC,EAAmBjH,EAAAA,QAAAA,OAAAA,WAAa,uEAAbA,CAAa,oEAOhCkH,GAAiBlH,EAAAA,EAAAA,SAAOmH,GAAS,gFAAhBnH,CAAgB,oEAE7BmB,EAAAA,GAAAA,kBAIJiG,EAAiBpH,EAAAA,QAAAA,MAAAA,WAAY,qEAAZA,CAAY,0IAQpBK,IAAAA,IAAC,KAAEoE,GAAM,SAAMA,EAAOxE,EAAAA,GAAAA,KAAAA,GAAeA,EAAAA,GAAAA,KAAAA,GAAa,IAG3D4E,GAAY7E,EAAAA,EAAAA,SAAO8E,EAAAA,GAAM,2EAAb9E,CAAa,0DAKzBqH,EAAgBrH,EAAAA,QAAAA,IAAAA,WAAU,oEAAVA,CAAU,yHAS1BsH,EAAkBtH,EAAAA,QAAAA,EAAAA,WAAQ,sEAARA,CAAQ,4BACjBC,EAAAA,GAAAA,KAAAA,GAIT+E,EAAahF,EAAAA,QAAAA,EAAAA,WAAQ,iEAARA,CAAQ,0GAIZC,EAAAA,GAAAA,KAAAA,IAKTsH,EAAsBvH,EAAAA,QAAAA,KAAAA,WAAW,0EAAXA,CAAW,yBAIjCwH,GAAUxH,EAAAA,EAAAA,SAAO+B,EAAAA,GAAE,yEAAT/B,CAAS,eAQnByH,EAA4BzH,EAAAA,QAAAA,IAAAA,WAAU,iFAAVA,CAAU,gDAC7BW,IAAAA,IAAC,QAAE+G,GAAS,SACvBA,EAAUzH,EAAAA,GAAAA,KAAAA,IAAgBA,EAAAA,GAAAA,KAAAA,EAAY,IAC9BuD,IAAAA,IAAC,QAAEkE,GAAS,SAAcA,EAAU,GAAM,EAAG,IA8GzD,MAhGmCjE,IAQ5B,IAR6B,MAClCyC,EAAK,SACL/D,EAAQ,UACRwF,EAAS,IACTzC,EAAG,YACH0C,EAAW,kBACXC,EAAiB,UACjB1E,GACD,EACC,MAAM,EAAC2E,EAAU,EAACC,IAAgBpE,EAAAA,EAAAA,WAAS,GACrCqE,GACH9B,EAAM+B,YAAc,IAAIC,QAAQC,GAAMA,EAAEjG,MAAQiG,EAAEjG,KAAKI,KAAIT,QAC3DqE,EAAMkC,QAAU,EAAI,GAEvB,OACE7H,EAAAA,cAACyG,EAAe,CACd7B,GAAIwC,EAAezB,EAAM9D,KAAI,OAAOuF,EAAczB,EAAM9D,KACxDkC,MACE,CACEc,WAAYjD,GAAY+D,EAAMb,MAAMC,iBAAiB+C,aACrD5C,MAAOtD,GAAY+D,EAAMb,MAAMC,iBAAiBgD,UAChD,kBAAmBpC,EAAMb,MAAMC,iBAAiBI,SAGpDvC,UAAWA,GAEX5C,EAAAA,cAACgI,EAAAA,EAAkB,CACjBjE,MAAO,CAAEkE,gBAAiBtC,EAAMb,MAAMC,iBAAiBK,QAEtDmC,EACCvH,EAAAA,cAACkI,EAAAA,EAAa,CACZC,IAAG,mCAAqCxC,EAAMyC,WAC5ChB,GAAS,OAAUiB,EAAAA,EAAAA,IAAkBjB,IAEvCkB,OAAQnC,EACRoC,MAAM,OACNC,OAAO,SAGTxI,EAAAA,cAAAA,MAAAA,KACGqH,GACCrH,EAAAA,cAAC0G,EAAgB,CACf/D,QAAUiD,IACRA,EAAEC,iBACF2B,GAAa,EAAK,GAGpBxH,EAAAA,cAAC2G,EAAc,OAGnB3G,EAAAA,cAACsE,EAAS,CAACQ,MAAOa,EAAMb,MAAOD,WAAYY,EAAAA,EAAAA,QAC3CzF,EAAAA,cAAC6G,EAAc,CAAC3C,KAAMS,EAAK,aAAW,aACnC8D,EAAAA,EAAAA,IAAgB9C,EAAM+C,aAK/B1I,EAAAA,cAAC8G,EAAa,KACZ9G,EAAAA,cAAAA,MAAAA,KACGoH,GACCpH,EAAAA,cAAC+G,EAAe,KAAC,eAAaK,EAAU,OAE1CpH,EAAAA,cAACiH,EAAO,CAACvF,GAAG,KAAKD,KAAK,KACnBkE,EAAMJ,OAGTvF,EAAAA,cAACkH,EAAyB,CAACC,UAAWxB,EAAMkC,SACzClC,EAAMkC,UAAYP,EACf3B,EAAMkC,QAAQnC,SACZ1F,EAAAA,cAAC+F,EAAAA,EAAU,CAACC,IAAKL,EAAMkC,QAAQnC,WAEhC0B,GACDK,EAAoB,GAClBzH,EAAAA,cAAAA,EAAAA,SAAAA,KAAE,aACWyH,EAAkB,QAC5BA,EAAoB,GAAK,OAKtCzH,EAAAA,cAACyE,EAAU,KACTzE,EAAAA,cAACgH,EAAmB,MACjB2B,EAAAA,EAAAA,IAAgBhD,EAAMiD,gBAEzB5I,EAAAA,cAAC6I,EAAAA,EAAW,KACTlD,EAAMmD,UACLC,SAASC,CAAAA,EAAYC,uCACrBjJ,EAAAA,cAAAA,OAAAA,MAAOkJ,EAAAA,EAAAA,IAAgBvD,EAAMmD,eAKrB,C,+ECnNf,MAiBMK,EAAaC,GACxBA,EACGC,QAAQ,sBAAuB,KAC/BA,QAAQ,cAAe,IACvBA,QAAQ,OAAQ,KAChB1I,OAEQ2I,EAAsBC,GACjCA,EAAQC,MAAK,CAACC,EAAGC,IAAOD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,G,uDCrB5C,MAAMC,EAAkBC,GAC7BA,EAAMC,MAAM1J,KAAKyJ,GAAUA,EAAME,M,oCCsBnC,IAtBsB,KACpB,GAAsB,oBAAXC,OACT,MAAO,CAAExB,MAAO,KAAMC,OAAQ,MAGhC,MAAMwB,EAAU,MACdzB,MAAOwB,OAAOE,WACdzB,OAAQuB,OAAOG,eAGX,EAACC,EAAW,EAACC,IAAiBhH,EAAAA,EAAAA,UAAS4G,GAS7C,OAPAtG,EAAAA,EAAAA,YAAU,KACR,MAAM2G,EAAe,IAAYD,EAAcJ,KAG/C,OADAD,OAAOO,iBAAiB,SAAUD,GAC3B,IAAYN,OAAOQ,oBAAoB,SAAUF,EAAa,GACpE,IAEIF,CAAU,C,wJCtBnB,MAAMK,EAAiB,CACrBC,KAAM,OACNC,MAAO,QACPC,IAAK,WAOMC,EAAoBC,IAC/B,MAAMC,EAAQD,EAAIE,MAAM,KACxB,MAAO,CAACD,EAAM,GAAIA,EAAME,MAAM,GAAGC,KAAK,KAAMJ,EAAI,EAGrCK,EACXC,IAQA,MAAMC,EAAYD,EACfhL,IAAIyK,GACJS,QAAO,CAACC,EAAK,KAAiC,IAA/BC,EAAQC,EAAMC,GAAW,EACvC,MAAMC,EAAQ,CAAEF,OAAMC,cAMtB,OALIH,EAAKC,GACPD,EAAKC,GAAQI,KAAKD,GAElBJ,EAAKC,GAAU,CAACG,GAEXJ,CAAI,GACV,CAAC,GAEN,OAAOrL,OAAO2L,KAAKpB,GAChB7C,QAAQkE,GAAMT,EAAUS,KACxB1L,KAAKoL,IAAM,CACVA,OAAQf,EAAee,GACvBO,OAAQV,EAAUG,MACjB,EAGMQ,EAAmB,CAC9B5K,EACAoK,KAEA,MAAMJ,EAAO,GACbhK,EAAM6K,SAAStC,GAAMyB,EAAKQ,KAAI,MAATR,GAAI,OAASzB,EAAEyB,SACpC,MAAMc,GAAW,OAAO,IAAIC,IAAIf,IAC1BgB,GAAc7C,EAAAA,EAAAA,GAAmB2C,GAEvC,OAAKV,EAEEY,EACJxE,QAAQkD,GAAQA,EAAIuB,WAAcb,EAAM,OACxCpL,KAAK0K,GAAQA,EAAIG,MAAMO,EAAOjK,OAAS,KAJtB6K,CAIyB,EAGlCE,EAAoB,CAC/BlL,EACAmL,EACAC,EACAC,EACAC,KAEA,IAAIC,EAAgBvL,EAcpB,OAbImL,GAA+B,SAAjBG,IAChBC,EAAgBA,EAAc/E,QAAQhG,GACpCA,EAAKwJ,KAAKrJ,SAAS,QAAQwK,MAE3BC,GAAgC,UAAjBE,IACjBC,EAAgBA,EAAc/E,QAAQhG,GACpCA,EAAKwJ,KAAKrJ,SAAS,SAASyK,MAE5BC,GAAkC,QAAjBC,IACnBC,EAAgBA,EAAc/E,QAAQhG,GACpCA,EAAKwJ,KAAKrJ,SAAS,OAAO0K,MAGvBE,CAAa,C,uOC9EtB,MAAMC,GAAclN,EAAAA,EAAAA,SAAO+B,EAAAA,GAAE,6EAAT/B,CAAS,wBAIvBmN,GAAiBnN,EAAAA,EAAAA,SAAO+B,EAAAA,GAAE,gFAAT/B,CAAS,wDAK1BoN,GAAepN,EAAAA,EAAAA,SAAO+B,EAAAA,GAAE,8EAAT/B,CAAS,yBAwB9B,I,YAAA,EAlBmCK,IAAAA,IAAC,MAAEyF,EAAK,SAAEuH,EAAQ,OAAEtH,EAAM,QAAEE,GAAS,SACtE1F,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC2M,EAAW,CAACjL,GAAG,KAAKD,KAAK,MAAMsL,YAAU,GACvCxH,GAEFuH,GACC9M,EAAAA,cAAC4M,EAAc,CAAClL,GAAG,KAAKD,KAAK,IAAIsL,YAAU,GACxCD,GAGL9M,EAAAA,cAAC6M,EAAY,CAACnL,GAAG,KAAKD,KAAK,KAAI,MACzB+D,GAGLE,GAAW1F,EAAAA,cAAC+F,EAAAA,EAAU,CAACC,IAAKN,IAC5B,E,6BC5BL,MAAMsH,EAAkBvN,EAAAA,QAAAA,OAAAA,WAAa,qEAAbA,CAAa,6MAUlB2E,EAAAA,GAAAA,EAEfzE,EAAAA,GAAAA,EAAW,uDAIXuB,EAAAA,GAAAA,EAAQ,kDACQ+L,EAAAA,EAAAA,IAAKC,EAAAA,GAAAA,GAAoBC,EAAAA,GAAAA,EAAiBC,EAAAA,GAAAA,KAE1DlM,EAAAA,GAAAA,GAAS,kDACO+L,EAAAA,EAAAA,IAAKC,EAAAA,GAAAA,IAAqBC,EAAAA,GAAAA,GAAkBC,EAAAA,GAAAA,MAM1DzN,EAAAA,GAAAA,EAAW,sDAIXA,EAAAA,GAAAA,EAAW,uDAMX2E,GAAY7E,EAAAA,EAAAA,SAAO8E,EAAAA,GAAM,0EAAb9E,CAAa,kIAK3BE,EAAAA,GAAAA,EAAW,0DAmBf,I,MAAA,EAZmCG,IAAAA,IAAC,MAAEgF,EAAK,WAAEO,GAAY,SACvDrF,EAAAA,cAACgN,EAAe,CAACjJ,MAAO,CAAEc,WAAYC,EAAMC,iBAAiBK,QAC3DpF,EAAAA,cAACsE,EAAS,CACRQ,MAAOA,EACPD,WAAYY,EAAAA,EAAAA,UACZ1B,MAAO,CACL,iBAAkBsB,GAAc,KAAO,KAAKC,QAAQ,MAGxC,E,8BCxDpB,MAAM+H,EAAkB,eAElBC,EAAmB7N,EAAAA,QAAAA,IAAAA,WAAU,wEAAVA,CAAU,kDAK7BE,EAAAA,GAAAA,EAAW,wDAGXA,EAAAA,GAAAA,EAAW,wDAMXmD,EAAgBrD,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,6BAG5BE,EAAAA,GAAAA,EAAW,wDAKT4N,EAAgB9N,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,qCAEjBC,EAAAA,GAAAA,KAAAA,GA+Bf,MA1BoCI,IAAwB,IAAvB,QAAE0N,EAAO,KAAEC,GAAM,EACpD,MAAM,EAACC,EAAc,EAACC,IAAoBvK,EAAAA,EAAAA,WAAUqK,GAEpD,OACEzN,EAAAA,cAACsN,EAAgB,KACdG,GACCzN,EAAAA,cAAC8C,EAAa,KACZ9C,EAAAA,cAACU,EAAAA,EAAe,CAACkN,wBAAyB,CAAEC,OAAQJ,MAIxDzN,EAAAA,cAAC8N,EAAAA,EAAa,CACZnL,QAAS,IAAYgL,GAAkBD,GACvClL,KAAMkL,EACNhL,OAAQ2K,GACT,cAIDrN,EAAAA,cAAC+N,EAAAA,EAAM,CAACrM,GAAI6L,EAAe/K,KAAMkL,EAAehL,OAAQ2K,GACrDG,GAEc,E,sCCvDvB,MAAMQ,GAAavO,EAAAA,EAAAA,SAAOoD,EAAAA,IAAK,yEAAZpD,CAAY,SAC3BwO,EAAAA,IAcJ,I,EAAA,EAPiCnO,IAAwB,IAAvB,IAAE+K,KAAQ1G,GAAO,EACjD,MAAOoH,EAAQC,IAAQZ,EAAAA,EAAAA,IAAiBC,GAClCjG,EAAQsJ,EAAAA,EAAAA,MAAW,IAAI3C,EAAM,IAAIC,EAEvC,OAAOxL,EAAAA,cAACgO,EAAU,eAACpJ,GAAIA,GAAQT,GAAS,ECX1C,MAAMgK,EAAW1O,EAAAA,QAAAA,GAAAA,WAAS,6DAATA,CAAS,mCAEXC,EAAAA,GAAAA,KAAAA,EAEXC,EAAAA,GAAAA,EAAW,iDAKTH,GAAWC,EAAAA,QAAAA,GAAAA,WAAS,6DAATA,CAAS,sCAkC1B,I,SAAA,GA3BkCK,IAAe,IAAd,KAAEqL,GAAM,EACzC,IAAKA,GAAwB,IAAhBA,EAAK7J,OAAc,OAAO,KAEvC,MAAM8M,GAAYlD,EAAAA,EAAAA,IAAkBC,GAEpC,OACEnL,EAAAA,cAACmO,EAAQ,KACNC,EAAUjO,KAAIC,IAAAA,IAAC,OAAEmL,EAAM,OAAEO,GAAQ,SAChC9L,EAAAA,cAACR,GAAQ,CAACe,IAAKgL,GACbvL,EAAAA,cAAAA,SAAAA,KAASuL,GAAgB,MACxBO,EACE3L,KAAK0K,GACJ7K,EAAAA,cAACqO,EAAO,CAACxD,IAAKA,EAAIY,WAAYlL,IAAKsK,EAAIY,YACpCZ,EAAIW,QAGRH,QACC,CAACC,EAA4BgD,IAClB,OAAThD,EAAgB,CAACgD,GAAK,kBAAOhD,GAAI,CAAE,KAAMgD,KAC3C,MAEK,IAEJ,ECnCf,MAAMC,GAAe,YAEfC,IAAsB/O,EAAAA,EAAAA,SAAOqO,EAAAA,GAAc,mFAArBrO,CAAqB,6BAC7CE,EAAAA,GAAAA,EAAW,iDAMT8O,GAAehP,EAAAA,QAAAA,GAAAA,WAAS,iEAATA,CAAS,YAC1BkB,EAAAA,EAEAO,EAAAA,GAAAA,EAAQ,8DAKNwN,GAAWjP,EAAAA,QAAAA,GAAAA,WAAS,6DAATA,CAAS,uDACXC,EAAAA,GAAAA,KAAAA,EACEA,EAAAA,GAAAA,OAAAA,KAGbC,EAAAA,GAAAA,EAAW,mDAKTgP,GAAWlP,EAAAA,QAAAA,GAAAA,WAAS,6DAATA,CAAS,4BACXC,EAAAA,GAAAA,KAAAA,GA+Gf,I,MAAA,GA9FkCI,IAU3B,IAV4B,UACjC8O,EAAS,kBACTC,EAAiB,UACjBC,EAAS,KACT3D,EAAI,OACJ4D,EAAM,UACNC,EAAS,aACTC,EAAY,UACZC,EAAS,aACTC,GACD,EACC,MAAQ5G,MAAO6G,IAAgBC,EAAAA,EAAAA,MACzB,EAACtM,EAAO,EAACI,IAAaC,EAAAA,EAAAA,WAAS,GAC/BkM,EAAmBN,EAAU1N,OAAS,EAE5C,OACEtB,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACwO,GAAmB,CAClB7L,QAAS,IAAYQ,GAAWJ,GAChCP,KAAMO,EACNL,OAAQ6L,IACT,aAIDvO,EAAAA,cAAC+N,EAAAA,EAAM,CACLrM,GAAI+M,GACJjM,KAAO4M,GAAeA,EAAcG,EAAAA,GAAAA,GAAiBxM,EACrDL,OAAQ6L,IAEPK,GACC5O,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC0O,GAAQ,KAAC,cACV1O,EAAAA,cAAC2O,GAAQ,KAAEC,IAGdC,GACC7O,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC0O,GAAQ,KAAC,mBACV1O,EAAAA,cAAC2O,GAAQ,MAAEa,EAAAA,EAAAA,IAAWX,KAGzBE,GACC/O,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC0O,GAAQ,KAAC,UACV1O,EAAAA,cAAC2O,GAAQ,KACNI,EAAOxJ,MAAM,KAAGwJ,EAAOU,SAI7BX,GACC9O,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAC0O,GAAQ,KAAC,aACV1O,EAAAA,cAAC2O,GAAQ,KAAEG,IAIf9O,EAAAA,cAAC0P,GAAQ,CAACvE,KAAMA,IAEhBnL,EAAAA,cAAC0O,GAAQ,KAAC,WACTO,GACCjP,EAAAA,cAAAA,EAAAA,SAAAA,KACGsP,GACCtP,EAAAA,cAAC2O,GAAQ,KAAC,QAAMK,EAAU1N,OAAO,UAEnCtB,EAAAA,cAAC2O,GAAQ,KACNW,EAAmB,YAAc,OAAO,MAAI,IAC7CtP,EAAAA,cAAAA,OAAAA,CAAM2P,SAAUV,EAAaW,aAC1BjH,EAAAA,EAAAA,IAAgBsG,MAKxBC,GACClP,EAAAA,cAAC2O,GAAQ,KAAC,YAER3O,EAAAA,cAAAA,OAAAA,CAAM2P,SAAUT,EAAUU,aACvBjH,EAAAA,EAAAA,IAAgBuG,KAItBC,GACCnP,EAAAA,cAAC2O,GAAQ,KAAC,eAER3O,EAAAA,cAAAA,OAAAA,CAAM2P,SAAUR,EAAaS,aAC1BjH,EAAAA,EAAAA,IAAgBwG,MAKxB,E,WC5HP,MAAMnO,IAAavB,EAAAA,EAAAA,SAAOwB,EAAAA,GAAK,YAAA4O,YAAAA,uBAAAC,YAAAA,gBAAZrQ,CAAY,oDAMzBsQ,GAAkBtQ,EAAAA,QAAAA,IAAAA,WAAU,CAAAoQ,YAAAA,4BAAAC,YAAAA,gBAAVrQ,CAAU,qBAI5BuQ,IAAyBvQ,EAAAA,EAAAA,SAAOsB,EAAAA,GAAS,YAAA8O,YAAAA,mCAAAC,YAAAA,gBAAhBrQ,CAAgB,YAC3CyB,EAAAA,GAAAA,EAAQ,uDAGRvB,EAAAA,GAAAA,EAAW,sDAiLf,OAvJkCG,IAG5B,IAFJmQ,MAAM,KAAEtO,EAAI,qBAAEuO,EAAoB,kBAAEC,GAAmB,SACvDC,GACD,EACC,MAAMC,EAAS,GAAH,gBACP1G,EAAAA,EAAAA,GAAewG,KAAkB,QACjCxG,EAAAA,EAAAA,GAAeuG,KAEdI,EAAgC,IAAlBD,EAAO/O,OAErBiP,EAAe5O,EAAK4O,aACpBC,EAAyB,EAAIC,KAAKC,KAAKL,EAAO/O,OAAS,GAE7D,OACEtB,EAAAA,cAAC2Q,EAAAA,EAAM,CACLP,SAAUA,EACVQ,SAAS,uBACTC,aAAc3C,EAAAA,EAAAA,MACd3I,MAAU5D,EAAK4D,MAAK,OAAO5D,EAAK6D,OAChCsL,aAAa3H,EAAAA,EAAAA,IAAUxH,EAAK8L,OAAS9L,EAAK6L,QAC1CuD,WAAepP,EAAKE,KAAI,cAExB7B,EAAAA,cAACgB,GAAU,CACTO,MAAI,EACJwC,MAAO,CACL,kBAAmBpC,EAAKmD,MAAMC,iBAAiB+C,aAC/C,oBAAqBnG,EAAKmD,MAAMC,iBAAiBC,cAGnDhF,EAAAA,cAACgQ,GAAsB,CACrBtO,GAAIqO,GACJiB,KAAK,MACLC,UAAU,MACVC,aAAa,SACbC,aAAa,SACbC,cAAc,UAEdpR,EAAAA,cAACqR,EAAS,CACR9L,MAAO5D,EAAK4D,MACZuH,SAAUnL,EAAKmL,SACftH,OAAQ7D,EAAK6D,OACbE,QAAS/D,EAAK+D,WAIlB1F,EAAAA,cAACgQ,GAAsB,CACrBkB,aAAa,MACbC,aAAa,MACbC,cAAc,OAEdpR,EAAAA,cAACsR,EAAS,CAACxM,MAAOnD,EAAKmD,MAAOO,WAAY1D,EAAK0D,cAGjDrF,EAAAA,cAACe,EAAAA,EAAQ,CACPkB,UAAW,EACXC,UAAW,EACXiP,aAAa,MACbC,cAAc,MACdG,cAAef,EAAyB,EACxCgB,cAAehB,GAEfxQ,EAAAA,cAACyR,GAAQ,CACP7C,UAAWjN,EAAKiN,UAChBC,kBAAmBlN,EAAKkN,kBACxBC,UAAWnN,EAAKmN,UAChB3D,KAAMxJ,EAAKwJ,KACX4D,OAAQpN,EAAKoN,OACbC,UAAWrN,EAAKqN,UAChBC,aAActN,EAAKsN,aACnBC,UAAWvN,EAAKuN,UAChBC,aAAcxN,EAAKwN,gBAIvBnP,EAAAA,cAACe,EAAAA,EAAQ,CACPkB,UAAW,EACXC,UAAW,EACXgP,aAAa,OACbC,aAAa,MACbC,cAAc,MACdJ,KAAK,IACLC,UAAU,IACVS,UAAS,MAAOlB,EAAyB,GACzCzM,MAAO,CAAE4N,aAAc,QAEvB3R,EAAAA,cAAC4R,GAAAA,EAAc,CAAC7R,MAAO4B,EAAK5B,SAG9BC,EAAAA,cAACe,EAAAA,EAAQ,CAACmQ,aAAa,OAAOC,aAAa,OAAOC,cAAc,QAC9DpR,EAAAA,cAAC6R,EAAU,CAACrE,QAAS7L,EAAK6L,QAASC,KAAM9L,EAAK8L,QAG/C4C,EAAOlQ,KAAKwF,IACX,MAAMmM,GAAkBnM,EAAM+B,YAAc,IAAIqK,MAC7CnK,GAAMA,EAAEjG,MAAQiG,EAAEjG,KAAKI,KAAOJ,EAAKI,KAEhCqF,EAAY0K,IAAkBrJ,EAAAA,EAAAA,IAAgBqJ,EAAelK,GAEnE,OACE5H,EAAAA,cAACe,EAAAA,EAAQ,CACPR,IAAKoF,EAAM5D,GACXC,KAAMsO,EAAc,EAAI,EACxBrO,UAAWqO,EAAc,EAAI,EAC7BpO,UAAWoO,EAAc,EAAI,EAC7B0B,WAAY1B,EAAc,EAAI,GAE9BtQ,EAAAA,cAACiS,EAAAA,EAAS,CACRtM,MAAOA,EACPyB,UAAWA,EACXzC,KAAG,EACH0C,aAAW,EACX6K,gBAAc,IAEP,KAKjBlS,EAAAA,cAACmS,EAAAA,EAAY,CAAChR,MAAOoP,IACd,C","sources":["webpack://chareads.com/./src/utils/urls/affiliates.ts","webpack://chareads.com/./src/components/BookAffiliates/index.tsx","webpack://chareads.com/./src/components/MarkdownWrapper/index.tsx","webpack://chareads.com/./src/components/RelatedBooks/index.tsx","webpack://chareads.com/./src/components/Reveal/RevealTrigger.tsx","webpack://chareads.com/./src/components/Reveal/index.tsx","webpack://chareads.com/./src/components/cards/BookCard/index.tsx","webpack://chareads.com/./src/components/icons/PlayIcon.tsx","webpack://chareads.com/./src/components/cards/VideoCard/index.tsx","webpack://chareads.com/./src/utils/formatting/text.ts","webpack://chareads.com/./src/utils/graphql/normalize.ts","webpack://chareads.com/./src/utils/hooks/useWindowSize.ts","webpack://chareads.com/./src/utils/tags/index.ts","webpack://chareads.com/./src/views/BookPage/BookTitle.tsx","webpack://chareads.com/./src/views/BookPage/BookImage.tsx","webpack://chareads.com/./src/views/BookPage/BookReview.tsx","webpack://chareads.com/./src/components/links/TagLink/index.tsx","webpack://chareads.com/./src/views/BookPage/TagsList/index.tsx","webpack://chareads.com/./src/views/BookPage/BookMeta.tsx","webpack://chareads.com/./src/views/BookPage/index.tsx"],"sourcesContent":["import { makeIsbn10 } from 'utils/formatting/isbn'\n\nexport const AFFILIATES = {\n  GOODREADS: 'gr',\n  AMAZON: 'amzn',\n  BOOKSHOP_ORG: 'bs',\n} as const\n\nexport const getLink = (isbn: string, affiliateAbbr: string): string => {\n  if (affiliateAbbr === AFFILIATES.GOODREADS)\n    return `https://www.goodreads.com/search?query=${isbn}`\n\n  if (affiliateAbbr === AFFILIATES.AMAZON)\n    return `https://amazon.com/dp/${makeIsbn10(String(isbn))}?tag=chareads-20`\n\n  if (affiliateAbbr === AFFILIATES.BOOKSHOP_ORG)\n    return `https://uk.bookshop.org/a/15033/${isbn}`\n}\n\nexport const getShortLink = (isbn: string, affiliateAbbr: string): string =>\n  `https://cha.rs/${parseInt(isbn).toString(36).toUpperCase()}/${affiliateAbbr}`\n\nexport const getAffiliateLinks = (isbn: string): object => {\n  const long = {}\n  const short = {}\n\n  Object.values(AFFILIATES).forEach((affiliate: string) => {\n    long[affiliate] = getLink(isbn, affiliate)\n    short[affiliate] = getShortLink(isbn, affiliate)\n  })\n\n  return {\n    long,\n    short,\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Book } from 'types/book'\nimport { AFFILIATES } from 'utils/urls/affiliates'\nimport { FONT } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\nimport ArrowIcon from 'components/icons/ArrowIcon'\n\nconst AFFILIATE_ACTIONS = {\n  [AFFILIATES.GOODREADS]: 'See on Goodreads',\n  [AFFILIATES.AMAZON]: 'Buy on Amazon',\n  [AFFILIATES.BOOKSHOP_ORG]: 'Buy on Bookshop.org',\n}\n\nconst StyledLi = styled.li`\n  font-size: ${FONT.SIZE.S};\n\n  ${screenMin.l`\n    margin-left: -1.5em;\n  `}\n`\n\nconst StyledArrowIcon = styled(ArrowIcon)`\n  margin: 0 0.75em 0 0;\n`\n\ntype Props = Pick<Book, 'links'>\n\nconst BookAffiliates: React.FC<Props> = ({ links }) => (\n  <ol>\n    {Object.entries(AFFILIATE_ACTIONS).map(([affiliateAbbr, label]) => (\n      <StyledLi key={affiliateAbbr}>\n        <a href={links.long[affiliateAbbr]}>\n          <StyledArrowIcon />\n          {label}\n        </a>\n      </StyledLi>\n    ))}\n  </ol>\n)\n\nexport default BookAffiliates\n","import styled from 'styled-components'\nimport { COLOR, FONT } from 'styles/tokens'\nimport { trim } from 'styles/helpers'\n\nconst MarkdownWrapper = styled.div`\n  ${trim}\n\n  hr {\n    height: 0.1em;\n    background: ${COLOR.BACKGROUND_DARK};\n    border: 0;\n    margin: 1em 0;\n  }\n\n  blockquote {\n    margin-left: 0;\n    border-left: 0.2em solid ${COLOR.BACKGROUND_DARK};\n    padding-left: 1em;\n  }\n\n  h2 {\n    margin-top: 1em;\n    font-size: ${FONT.SIZE.M};\n  }\n\n  h3,\n  h4 {\n    margin-top: 1em;\n    font-size: ${FONT.SIZE.S};\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  ul {\n    list-style: disc;\n  }\n\n  ol {\n    list-style: decimal;\n  }\n\n  p,\n  ul,\n  ol {\n    margin: 0.5em 0;\n  }\n\n  ul,\n  ol {\n    padding-left: 1em;\n    ${trim}\n  }\n\n  li {\n    margin: 0.25em 0;\n  }\n\n  a {\n    text-decoration: underline;\n    text-decoration-color: var(--secondary-color);\n  }\n`\n\nexport default MarkdownWrapper\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport H from 'components/H'\nimport { FONT } from 'styles/tokens'\nimport { screen, screenMin } from 'styles/responsive'\n\nimport { BookCardType } from 'types/book'\nimport BookCard from 'components/cards/BookCard'\n\nconst StyledWrapper = styled.div`\n  margin: 2em 0 1em;\n`\n\nconst StyledTitleGridItem = styled(GridItem)`\n  ${screenMin.m`\n    display: none;\n  `}\n`\n\nconst StyledGrid = styled(Grid)`\n  font-size: ${FONT.SIZE.S};\n\n  ${screen.l`\n    > *:nth-last-child(1) {\n      display: none;\n    }\n  `}\n`\n\ninterface Props {\n  books: BookCardType[]\n  featuredSlugs?: string[]\n  ownedSlug?: string\n}\n\nconst RelatedBooks: React.FC<Props> = ({ books, featuredSlugs, ownedSlug }) => {\n  if (!books || books.length === 0) return null\n\n  return (\n    <StyledWrapper>\n      <StyledGrid full>\n        <StyledTitleGridItem>\n          <H size=\"L\" as=\"h2\">\n            Related books\n          </H>\n        </StyledTitleGridItem>\n\n        {books.map((book: BookCardType): React.ReactNode => {\n          const featured = ownedSlug\n            ? ownedSlug === book.slug\n            : featuredSlugs && featuredSlugs.includes(book.slug)\n\n          return (\n            <GridItem key={book.id} span={1} spanFromM={3} spanFromL={2}>\n              <BookCard\n                book={book}\n                featured={featured}\n                hideDetails={ownedSlug === book.slug}\n              />\n            </GridItem>\n          )\n        })}\n      </StyledGrid>\n    </StyledWrapper>\n  )\n}\n\nexport default RelatedBooks\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { FONT } from 'styles/tokens'\nimport { screenMax } from 'styles/responsive'\nimport Link from 'components/links/Link'\n\nconst StyledSummaryTrigger = styled.button`\n  font-size: ${FONT.SIZE.S};\n  font-weight: ${FONT.WEIGHT.BOLD};\n\n  ${screenMax.s`\n    width: 100%;\n    text-align: left;\n  `}\n`\n\nconst StyledIcon = styled.i<Pick<Props, 'open'>>`\n  display: inline-block;\n  position: relative;\n  width: 1.25em;\n  height: 1.25em;\n  vertical-align: -0.3em;\n\n  &:before,\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 50%;\n    left: 0.35em;\n    width: 0.7em;\n    height: 0.125em;\n    background: currentColor;\n    transform-origin: 50% 50%;\n    transform: translate(-50%, -50%);\n    transition: transform 0.2s linear;\n  }\n\n  ${({ open }): string =>\n    !open &&\n    `\n    &:before {\n      transform: translate(-50%, -50%) rotate(-90deg);\n    }\n  `}\n`\n\ninterface Props {\n  children: React.ReactNode\n  open: boolean\n  ariaId?: string\n  onClick: () => void\n  className?: string\n}\n\nconst RevealTrigger: React.FC<Props> = ({\n  children,\n  open,\n  ariaId,\n  onClick,\n  className,\n}) => (\n  <Link\n    onClick={onClick}\n    aria-expanded={open}\n    aria-controls={ariaId}\n    as={StyledSummaryTrigger}\n    className={className}\n  >\n    <StyledIcon open={open} />\n    {children}\n  </Link>\n)\n\nexport default RevealTrigger\n","import React, { useState, useEffect, createRef } from 'react'\nimport styled from 'styled-components'\n\nconst TRANSITION_DURATION_IN_MS = 200\n\ninterface ContentProps {\n  ref: React.RefObject<React.ReactNode>\n  isOpen: boolean\n  isTransitioning: boolean\n  contentHeight: number\n  className?: string\n  as?: string\n}\n\nconst StyledContent = styled.div<ContentProps>`\n  margin: 0;\n  will-change: opacity, max-height;\n  transition: opacity ${TRANSITION_DURATION_IN_MS}ms ease-in-out,\n    max-height ${TRANSITION_DURATION_IN_MS}ms ease-in-out;\n  overflow: hidden;\n\n  ${({ isOpen, isTransitioning }): string =>\n    !isOpen &&\n    !isTransitioning &&\n    `\n      position: absolute;\n      opacity: 0;\n      pointer-events: none;\n  `}\n\n  ${({ isTransitioning }): string =>\n    isTransitioning &&\n    `\n      opacity: 0;\n      max-height: 0;\n  `}\n\n  ${({ isOpen }): string =>\n    isOpen &&\n    `\n      opacity: 1;\n  `}\n`\n\ninterface Props {\n  children: React.ReactNode\n  open: boolean\n  ariaId?: string\n  className?: string\n  as?: string\n}\n\nconst Reveal: React.FC<Props> = ({ children, open, ariaId, className, as }) => {\n  const [isOpen, setIsOpen] = useState(open)\n  const [isTransitioning, setIsTransitioning] = useState(false)\n  const [contentHeight, setContentHeight] = useState(null)\n  const contentEl = createRef<HTMLDivElement>()\n\n  useEffect(() => {\n    if (open) {\n      const ref = contentEl.current as HTMLElement\n      setContentHeight(ref.clientHeight)\n      setIsTransitioning(true)\n    } else {\n      setIsOpen(false)\n      setTimeout(() => setIsTransitioning(false), TRANSITION_DURATION_IN_MS)\n    }\n  }, [open])\n\n  useEffect(() => {\n    if (isTransitioning && !isOpen) setTimeout(() => setIsOpen(true), 50)\n  }, [isTransitioning])\n\n  return (\n    <StyledContent\n      className={className}\n      ref={contentEl}\n      isOpen={isOpen}\n      isTransitioning={isTransitioning}\n      id={ariaId}\n      aria-hidden={!isOpen}\n      as={as}\n      style={{\n        maxHeight: isOpen && contentHeight,\n      }}\n    >\n      {children}\n    </StyledContent>\n  )\n}\n\nexport default Reveal\n","import React from 'react'\nimport styled, { SimpleInterpolation } from 'styled-components'\nimport { Link, navigate } from 'gatsby'\n\nimport { BookCardType } from 'types/book'\nimport Image, { ImageColor } from 'components/Image'\nimport StarRating from 'components/StarRating'\nimport ArrowIcon from 'components/icons/ArrowIcon'\nimport { FONT, COLOR, BORDER_RADIUS } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\n\ninterface BookCardProps {\n  $big: boolean\n}\n\nconst StyledBookCard = styled(\n  ({ $big, ...props }) => <Link {...props} /> // eslint-disable-line\n)<BookCardProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  margin: 0;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n  outline: 0 !important;\n  --perspective: 800px;\n  --book-pages-color: #afbdbb;\n\n  ${({ $big }): SimpleInterpolation =>\n    $big &&\n    screenMin.m`\n    --perspective: 1600px;\n    `}\n  }\n`\n\nconst StyledImgWrapper = styled.figure`\n  max-width: 100%;\n  height: 150px;\n  margin: 0.5em;\n  background: var(--book-pages-color);\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n  transform: scale(var(--book-scale));\n\n  *::selection {\n    background: var(--primary-color);\n    color: ${COLOR.BACKGROUND_LIGHT};\n  }\n\n  ${screenMin.m`\n    &[data-big='true'] {\n      height: 350px;\n    }\n  `}\n`\n\nconst StyledImg = styled(Image)`\n  height: 100%;\n  vertical-align: bottom;\n  transition: transform 0.3s ease-out;\n  transform-origin: 0 50%;\n  box-shadow: 0 0 0.3em rgba(0, 0, 0, 0.05);\n  transform: perspective(var(--perspective)) rotateY(0);\n\n  img {\n    height: 100%;\n    width: auto;\n  }\n\n  a:hover &,\n  a:focus & {\n    transition: transform 0.15s ease-out;\n    transform: perspective(var(--perspective)) rotateY(-30deg);\n  }\n\n  a:active & {\n    transition: transform 0.5s ease-out;\n    transform: perspective(var(--perspective)) rotateY(-80deg);\n  }\n`\n\nconst StyledAccessibilityTitle = styled.figcaption`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  font-size: ${FONT.SIZE.S};\n  color: transparent;\n  padding: 0.5em;\n  display: flex;\n  place-items: center;\n`\n\nconst StyledMeta = styled.div`\n  margin: 0 0 1em;\n  font-size: ${FONT.SIZE.XS};\n  line-height: 1;\n  text-align: center;\n\n  & > * + * {\n    margin-top: 0.25em;\n  }\n`\n\nconst StyledVideoLink = styled.button`\n  display: inline-block;\n  font-weight: ${FONT.WEIGHT.BOLD};\n  padding: 0.25em 0.5em;\n  transition: transform 150ms linear;\n\n  &:hover {\n    transform: translate(-0.1em, 0);\n  }\n\n  &::selection {\n    background: transparent;\n  }\n`\n\ninterface Props {\n  book: BookCardType\n  featured?: boolean\n  big?: boolean\n  hideDetails?: boolean\n  className?: string\n}\n\nconst BookCard: React.FC<Props> = ({\n  book,\n  featured,\n  big,\n  hideDetails,\n  className,\n}) => {\n  return (\n    <StyledBookCard\n      to={book.slug}\n      $big={big}\n      style={\n        {\n          background: hideDetails\n            ? book.image.childImageColors.darkVibrant\n            : featured && book.image.childImageColors.lightMuted,\n          color: book.image.childImageColors.darkVibrant,\n          '--primary-color': book.image.childImageColors.vibrant,\n          '--secondary-color': book.image.childImageColors.darkVibrant,\n          '--book-pages-color': featured && book.image.childImageColors.muted,\n          '--book-scale': ((book.bookHeight || 198) / 220).toFixed(2),\n        } as object\n      }\n      className={className}\n      title={`${book.title} by ${book.author}`}\n    >\n      <StyledImgWrapper data-big={big}>\n        <StyledImg image={book.image} background={ImageColor.Muted} />\n        <StyledAccessibilityTitle>\n          <span>\n            {book.title} by {book.author}\n          </span>\n        </StyledAccessibilityTitle>\n      </StyledImgWrapper>\n      {!hideDetails && (book.rating7 || book.video) && (\n        <StyledMeta>\n          {book.video && (\n            <StyledVideoLink\n              onClick={(e): void => {\n                e.preventDefault()\n                navigate(book.video.slug)\n              }}\n            >\n              Video review\n              <ArrowIcon />\n            </StyledVideoLink>\n          )}\n          {book.rating7 && <StarRating of7={book.rating7} />}\n        </StyledMeta>\n      )}\n    </StyledBookCard>\n  )\n}\n\nexport default BookCard\n","import React from 'react'\n\ninterface Props {\n  className?: string\n}\n\nconst PlayIcon: React.FC<Props> = ({ className }) => (\n  <svg viewBox=\"0 0 11 14\" className={className}>\n    <path d=\"M9.2,6.2l-7.5-5c-0.5-0.3-1.2,0-1.2,0.6v10.3c0,0.6,0.7,1,1.2,0.6l7.5-5C9.8,7.4,9.8,6.6,9.2,6.2z\" />\n  </svg>\n)\n\nexport default PlayIcon\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport YouTubePlayer from 'react-player/lib/players/YouTube'\n\nimport { VideoCardType } from 'types/video'\nimport {\n  shortFormatDate,\n  unformatTimestamp,\n  formatTimestamp,\n} from 'utils/formatting/time'\nimport { formatViewCount } from 'utils/formatting/numbers'\nimport H from 'components/H'\nimport { COLOR, FONT, BORDER_RADIUS } from 'styles/tokens'\nimport Image, { ImageColor } from 'components/Image'\nimport StarRating from 'components/StarRating'\nimport AspectRatioWrapper from 'components/AspectRatioWrapper'\nimport PlayIcon from 'components/icons/PlayIcon'\nimport { HideOnPercy } from 'components/HideOnPercy'\n\nconst YouTubePlayerConfig = {\n  youtube: {\n    playerVars: {\n      rel: 0,\n      controls: 1,\n      autoplay: 1,\n    },\n  },\n}\n\nconst StyledVideoCard = styled(Link)`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  overflow: hidden;\n  background: ${COLOR.BACKGROUND_DARK};\n  border-radius: ${BORDER_RADIUS.S};\n`\n\nconst StyledPlayButton = styled.button`\n  position: absolute;\n  z-index: 1;\n  padding: 0.5em 0.6em;\n  line-height: 0;\n`\n\nconst StyledPlayIcon = styled(PlayIcon)`\n  width: 1em;\n  fill: ${COLOR.BACKGROUND_LIGHT};\n  filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.1));\n`\n\nconst StyledDuration = styled.aside`\n  position: absolute;\n  bottom: 0.25em;\n  right: 0.25em;\n  padding: 0 0.375em;\n  border-radius: 2px;\n  background: #00000088;\n  color: #ffffffcc;\n  font-size: ${({ $big }) => ($big ? FONT.SIZE.XS : FONT.SIZE.XXS)};\n`\n\nconst StyledImg = styled(Image)`\n  width: 100%;\n  box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.1);\n`\n\nconst StyledDetails = styled.div`\n  padding: 0.5em 0.5em 0.3em;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  min-height: 4.8em;\n`\n\nconst StyledTimestamp = styled.p`\n  font-size: ${FONT.SIZE.S};\n  margin: 0;\n`\n\nconst StyledMeta = styled.p`\n  display: flex;\n  justify-content: space-between;\n  flex-flow: wrap-reverse;\n  font-size: ${FONT.SIZE.XS};\n  margin: 0;\n  opacity: 0.5;\n`\n\nconst StyledDatePublished = styled.time`\n  margin-right: 0.5em;\n`\n\nconst StyledH = styled(H)`\n  margin: 0;\n`\n\ninterface BookContentsProps {\n  isStars: boolean\n}\n\nconst StyledBookContentsWrapper = styled.div<BookContentsProps>`\n  font-size: ${({ isStars }): string =>\n    isStars ? FONT.SIZE.XXS : FONT.SIZE.XS};\n  margin: ${({ isStars }): number => (isStars ? 0.4 : 0.2)}em 0;\n  opacity: 0.75;\n`\n\ninterface Props {\n  video: VideoCardType\n  featured?: boolean\n  timestamp?: string\n  big?: boolean\n  playsInline?: boolean\n  hideOwnedByRating?: boolean\n  className?: string\n}\n\nconst VideoCard: React.FC<Props> = ({\n  video,\n  featured,\n  timestamp,\n  big,\n  playsInline,\n  hideOwnedByRating,\n  className,\n}) => {\n  const [playVideo, setPlayVideo] = useState(false)\n  const featuredBookCount =\n    (video.timestamps || []).filter((t) => t.book && t.book.id).length +\n    (video.ownedBy ? 1 : 0)\n\n  return (\n    <StyledVideoCard\n      to={timestamp ? `${video.slug}?at=${timestamp}` : video.slug}\n      style={\n        {\n          background: featured && video.image.childImageColors.lightVibrant,\n          color: featured && video.image.childImageColors.darkMuted,\n          '--primary-color': video.image.childImageColors.vibrant,\n        } as object\n      }\n      className={className}\n    >\n      <AspectRatioWrapper\n        style={{ backgroundColor: video.image.childImageColors.muted }}\n      >\n        {playVideo ? (\n          <YouTubePlayer\n            url={`https://www.youtube.com/watch?v=${video.youtubeId}${\n              timestamp && `&t=${unformatTimestamp(timestamp)}`\n            }`}\n            config={YouTubePlayerConfig}\n            width=\"100%\"\n            height=\"100%\"\n          />\n        ) : (\n          <div>\n            {playsInline && (\n              <StyledPlayButton\n                onClick={(e): void => {\n                  e.preventDefault()\n                  setPlayVideo(true)\n                }}\n              >\n                <StyledPlayIcon />\n              </StyledPlayButton>\n            )}\n            <StyledImg image={video.image} background={ImageColor.Muted} />\n            <StyledDuration $big={big} aria-label=\"duration\">\n              {formatTimestamp(video.duration)}\n            </StyledDuration>\n          </div>\n        )}\n      </AspectRatioWrapper>\n      <StyledDetails>\n        <div>\n          {timestamp && (\n            <StyledTimestamp>Featured at {timestamp} in</StyledTimestamp>\n          )}\n          <StyledH as=\"h2\" size=\"S\">\n            {video.title}\n          </StyledH>\n\n          <StyledBookContentsWrapper isStars={!!video.ownedBy}>\n            {video.ownedBy && !hideOwnedByRating\n              ? video.ownedBy.rating7 && (\n                  <StarRating of7={video.ownedBy.rating7} />\n                )\n              : !timestamp &&\n                featuredBookCount > 1 && (\n                  <>\n                    Featuring {featuredBookCount} book\n                    {featuredBookCount > 1 && 's'}\n                  </>\n                )}\n          </StyledBookContentsWrapper>\n        </div>\n        <StyledMeta>\n          <StyledDatePublished>\n            {shortFormatDate(video.datePublished)}\n          </StyledDatePublished>\n          <HideOnPercy>\n            {video.viewCount >\n              parseInt(process.env.GATSBY_YOUTUBE_VIEWS_MINIMUM_VISIBLE) && (\n              <span>{formatViewCount(video.viewCount)}</span>\n            )}\n          </HideOnPercy>\n        </StyledMeta>\n      </StyledDetails>\n    </StyledVideoCard>\n  )\n}\n\nexport default VideoCard\n","import { Book } from 'types/book'\n\nexport const getBookDetailsFromString = (\n  text: string\n): Pick<Book, 'title' | 'author'> | undefined => {\n  const referenceMatch = text.match(/^(.+), (.+)$/)\n  return (\n    referenceMatch && {\n      title: referenceMatch[1],\n      author: referenceMatch[2],\n    }\n  )\n}\n\nexport const formatBookDetails = ({\n  title,\n  author,\n}: Pick<Book, 'title' | 'author'>): string => `${title} by ${author}`\n\nexport const stripHtml = (text: string): string =>\n  text\n    .replace(/<\\/[^>]+><[^>/]+>/gm, ' ')\n    .replace(/<\\/?[^>]+>/g, '')\n    .replace(/ +/gm, ' ')\n    .trim()\n\nexport const sortAlphabetically = (strings: string[]): string[] =>\n  strings.sort((a, b) => (a < b ? -1 : a > b ? 1 : 0))\n","interface Query {\n  edges: {\n    node: object\n  }[]\n}\n\nexport const normalizeArray = (query: Query): object[] =>\n  query.edges.map((query) => query.node)\n","import { useState, useEffect } from 'react'\n\ninterface WindowSize {\n  width: number\n  height: number\n}\n\nconst useWindowSize = (): WindowSize => {\n  if (typeof window === 'undefined') {\n    return { width: null, height: null }\n  }\n\n  const getSize = (): WindowSize => ({\n    width: window.innerWidth,\n    height: window.innerHeight,\n  })\n\n  const [windowSize, setWindowSize] = useState(getSize)\n\n  useEffect(() => {\n    const handleResize = (): void => setWindowSize(getSize())\n\n    window.addEventListener('resize', handleResize)\n    return (): void => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowSize\n}\n\nexport default useWindowSize\n","import { sortAlphabetically } from 'utils/formatting/text'\n\nexport type TagPrefix = 'type' | 'genre' | 'sub'\n\nconst tagPrefixNames = {\n  type: 'Type',\n  genre: 'Genre',\n  sub: 'Subject',\n}\n\nexport interface BookWithTags {\n  tags: string[]\n}\n\nexport const splitTagByPrefix = (tag: string): [string, string, string] => {\n  const parts = tag.split('-')\n  return [parts[0], parts.slice(1).join('-'), tag]\n}\n\nexport const splitTagsByPrefix = (\n  tags: string[]\n): {\n  prefix: string\n  values: {\n    name: string\n    unprefixed: string\n  }[]\n}[] => {\n  const resultMap = tags\n    .map(splitTagByPrefix)\n    .reduce((prev, [prefix, name, unprefixed]) => {\n      const value = { name, unprefixed }\n      if (prev[prefix]) {\n        prev[prefix].push(value)\n      } else {\n        prev[prefix] = [value]\n      }\n      return prev\n    }, {})\n\n  return Object.keys(tagPrefixNames)\n    .filter((p) => resultMap[p])\n    .map((prefix) => ({\n      prefix: tagPrefixNames[prefix],\n      values: resultMap[prefix],\n    }))\n}\n\nexport const getTagsFromBooks = (\n  books: BookWithTags[],\n  prefix?: TagPrefix\n): string[] => {\n  const tags = []\n  books.forEach((b) => tags.push(...b.tags))\n  const dedupedTags = [...new Set(tags)]\n  const orderedTags = sortAlphabetically(dedupedTags)\n\n  if (!prefix) return orderedTags\n\n  return orderedTags\n    .filter((tag) => tag.startsWith(`${prefix}-`))\n    .map((tag) => tag.slice(prefix.length + 1))\n}\n\nexport const filterBooksByTags = (\n  books: BookWithTags[],\n  filterType?: string,\n  filterGenre?: string,\n  filterSubject?: string,\n  ignorePrefix?: TagPrefix\n): BookWithTags[] => {\n  let filteredBooks = books\n  if (filterType && ignorePrefix !== 'type')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`type-${filterType}`)\n    )\n  if (filterGenre && ignorePrefix !== 'genre')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`genre-${filterGenre}`)\n    )\n  if (filterSubject && ignorePrefix !== 'sub')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`sub-${filterSubject}`)\n    )\n\n  return filteredBooks\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Book } from 'types/book'\nimport StarRating from 'components/StarRating'\nimport H from 'components/H'\n\nconst StyledTitle = styled(H)`\n  margin: 0 0 0.25em;\n`\n\nconst StyledSubtitle = styled(H)`\n  margin: -0.25em 0 0.375em;\n  text-transform: lowercase;\n`\n\nconst StyledAuthor = styled(H)`\n  margin: 0.5em 0 1em;\n`\n\ntype Props = Pick<Book, 'title' | 'subtitle' | 'author' | 'rating7'>\n\nconst BookTitle: React.FC<Props> = ({ title, subtitle, author, rating7 }) => (\n  <>\n    <StyledTitle as=\"h2\" size=\"XXL\" decorative>\n      {title}\n    </StyledTitle>\n    {subtitle && (\n      <StyledSubtitle as=\"h3\" size=\"L\" decorative>\n        {subtitle}\n      </StyledSubtitle>\n    )}\n    <StyledAuthor as=\"h2\" size=\"M\">\n      by {author}\n    </StyledAuthor>\n\n    {rating7 && <StarRating of7={rating7} />}\n  </>\n)\n\nexport default BookTitle\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Book } from 'types/book'\nimport { BORDER_RADIUS } from 'styles/tokens'\nimport { screen, screenMin } from 'styles/responsive'\nimport { toVW, MARGIN_COLUMNS, COLUMN_WIDTH, GAP } from 'styles/layout'\nimport Image, { ImageColor } from 'components/Image'\n\nconst StyledBookImage = styled.figure`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  margin: 0;\n  box-sizing: border-box;\n  padding: 1em 0;\n  width: auto;\n  height: 100%;\n  border-radius: ${BORDER_RADIUS.S};\n\n  ${screenMin.l`\n    justify-content: start;\n  `}\n\n  ${screen.l`\n    padding-left: ${toVW(MARGIN_COLUMNS.L * (COLUMN_WIDTH.L + GAP.L))};\n  `}\n  ${screen.xl`\n    padding-left: ${toVW(MARGIN_COLUMNS.XL * (COLUMN_WIDTH.XL + GAP.XL))};\n  `}\n\n  img {\n    max-height: 200px;\n\n    ${screenMin.m`\n      max-height: 300px;\n    `}\n\n    ${screenMin.l`\n      max-height: 400px;\n    `}\n  }\n`\n\nconst StyledImg = styled(Image)`\n  box-shadow: 0 0.4em 1em rgba(0, 0, 0, 0.2), 0 0 0.6em rgba(0, 0, 0, 0.1);\n  vertical-align: bottom;\n  transform: scale(var(--book-scale));\n\n  ${screenMin.l`\n    transform-origin: 0% 50%;\n  `}\n`\n\ntype Props = Pick<Book, 'image' | 'bookHeight'>\n\nconst BookImage: React.FC<Props> = ({ image, bookHeight }) => (\n  <StyledBookImage style={{ background: image.childImageColors.muted }}>\n    <StyledImg\n      image={image}\n      background={ImageColor.DarkMuted}\n      style={{\n        '--book-scale': ((bookHeight || 198) / 220).toFixed(2),\n      }}\n    />\n  </StyledBookImage>\n)\n\nexport default BookImage\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Book } from 'types/book'\nimport { FONT } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\nimport MarkdownWrapper from 'components/MarkdownWrapper'\nimport Reveal from 'components/Reveal'\nimport RevealTrigger from 'components/Reveal/RevealTrigger'\n\nconst SUMMARY_ARIA_ID = 'book-summary'\n\nconst StyledBookReview = styled.div`\n  position: relative;\n\n  && {\n    margin-top: -1em;\n    ${screenMin.m`\n      margin-top: -0.25em;\n    `}\n    ${screenMin.l`\n      margin-bottom: 1em;\n    `}\n  }\n`\n\nconst StyledContent = styled.div`\n  margin: 0.5em 0 0.5em;\n\n  ${screenMin.m`\n    margin-bottom: 0 0 1em;\n  `}\n`\n\nconst StyledSummary = styled.div`\n  padding: 0.5em 0 0;\n  font-size: ${FONT.SIZE.S};\n`\n\ntype Props = Pick<Book, 'summary' | 'html'>\n\nconst BookReview: React.FC<Props> = ({ summary, html }) => {\n  const [isSummaryOpen, setisSummaryOpen] = useState(!html)\n\n  return (\n    <StyledBookReview>\n      {html && (\n        <StyledContent>\n          <MarkdownWrapper dangerouslySetInnerHTML={{ __html: html }} />\n        </StyledContent>\n      )}\n\n      <RevealTrigger\n        onClick={(): void => setisSummaryOpen(!isSummaryOpen)}\n        open={isSummaryOpen}\n        ariaId={SUMMARY_ARIA_ID}\n      >\n        Book blurb\n      </RevealTrigger>\n\n      <Reveal as={StyledSummary} open={isSummaryOpen} ariaId={SUMMARY_ARIA_ID}>\n        {summary}\n      </Reveal>\n    </StyledBookReview>\n  )\n}\n\nexport default BookReview\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport { FILTER_UNDERLINE_STYLE } from 'styles/tokens'\nimport PATHS from 'routes/paths'\nimport { splitTagByPrefix } from 'utils/tags'\n\nconst StyledLink = styled(Link)`\n  ${FILTER_UNDERLINE_STYLE};\n`\n\ninterface Props {\n  tag: string\n}\n\nconst TagLink: React.FC<Props> = ({ tag, ...props }) => {\n  const [prefix, name] = splitTagByPrefix(tag)\n  const to = `${PATHS.BOOKS}?${prefix}=${name}`\n\n  return <StyledLink to={to} {...props} />\n}\n\nexport default TagLink\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Book } from 'types/book'\nimport { FONT } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\nimport { splitTagsByPrefix } from 'utils/tags'\nimport TagLink from 'components/links/TagLink'\n\nconst StyledOl = styled.ol`\n  margin: 1em 0;\n  font-size: ${FONT.SIZE.S};\n\n  ${screenMin.m`\n    margin: 1.5em 0;\n  `}\n`\n\nconst StyledLi = styled.li`\n  line-height: 1.25;\n  margin: 0.5em 0;\n`\n\ntype Props = Pick<Book, 'tags'>\n\nconst TagsList: React.FC<Props> = ({ tags }) => {\n  if (!tags || tags.length === 0) return null\n\n  const splitTags = splitTagsByPrefix(tags)\n\n  return (\n    <StyledOl>\n      {splitTags.map(({ prefix, values }) => (\n        <StyledLi key={prefix}>\n          <strong>{prefix}</strong> &ndash; {}\n          {values\n            .map((tag) => (\n              <TagLink tag={tag.unprefixed} key={tag.unprefixed}>\n                {tag.name}\n              </TagLink>\n            ))\n            .reduce(\n              (prev: React.ReactElement[], curr: React.ReactElement) =>\n                prev === null ? [curr] : [...prev, ', ', curr],\n              null\n            )}\n        </StyledLi>\n      ))}\n    </StyledOl>\n  )\n}\n\nexport default TagsList\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Book } from 'types/book'\nimport { shortFormatDate, formatYear } from 'utils/formatting/time'\nimport useWindowSize from 'utils/hooks/useWindowSize'\nimport { FONT, BREAKPOINT } from 'styles/tokens'\nimport { trim } from 'styles/helpers'\nimport { screen, screenMin } from 'styles/responsive'\nimport Reveal from 'components/Reveal'\nimport RevealTrigger from 'components/Reveal/RevealTrigger'\nimport TagsList from './TagsList'\n\nconst META_ARIA_ID = 'book-meta'\n\nconst StyledRevealTrigger = styled(RevealTrigger)`\n  ${screenMin.m`\n    display: none;\n  `}\n  margin-bottom: 0.5em;\n`\n\nconst StyledReveal = styled.dl`\n  ${trim}\n\n  ${screen.s`\n    padding: 0.5em 0 0.5em 1em;\n  `}\n`\n\nconst StyledDt = styled.dt`\n  font-size: ${FONT.SIZE.S};\n  font-weight: ${FONT.WEIGHT.BOLD};\n  margin: 0.5em 0 0;\n\n  ${screenMin.m`\n    margin: 1em 0 0;\n  `}\n`\n\nconst StyledDd = styled.dd`\n  font-size: ${FONT.SIZE.S};\n  margin: 0;\n`\n\ntype Props = Pick<\n  Book,\n  | 'pageCount'\n  | 'dateBookPublished'\n  | 'publisher'\n  | 'tags'\n  | 'series'\n  | 'readDates'\n  | 'dateLastRead'\n  | 'dateRated'\n  | 'dateReviewed'\n>\n\nconst BookMeta: React.FC<Props> = ({\n  pageCount,\n  dateBookPublished,\n  publisher,\n  tags,\n  series,\n  readDates,\n  dateLastRead,\n  dateRated,\n  dateReviewed,\n}) => {\n  const { width: windowWidth } = useWindowSize()\n  const [isOpen, setIsOpen] = useState(false)\n  const readMoreThanOnce = readDates.length > 1\n\n  return (\n    <>\n      <StyledRevealTrigger\n        onClick={(): void => setIsOpen(!isOpen)}\n        open={isOpen}\n        ariaId={META_ARIA_ID}\n      >\n        Book data\n      </StyledRevealTrigger>\n\n      <Reveal\n        as={StyledReveal}\n        open={(windowWidth && windowWidth > BREAKPOINT.S) || isOpen}\n        ariaId={META_ARIA_ID}\n      >\n        {pageCount && (\n          <>\n            <StyledDt>Page count</StyledDt>\n            <StyledDd>{pageCount}</StyledDd>\n          </>\n        )}\n        {dateBookPublished && (\n          <>\n            <StyledDt>First published</StyledDt>\n            <StyledDd>{formatYear(dateBookPublished)}</StyledDd>\n          </>\n        )}\n        {series && (\n          <>\n            <StyledDt>Series</StyledDt>\n            <StyledDd>\n              {series.title} #{series.number}\n            </StyledDd>\n          </>\n        )}\n        {publisher && (\n          <>\n            <StyledDt>Publisher</StyledDt>\n            <StyledDd>{publisher}</StyledDd>\n          </>\n        )}\n\n        <TagsList tags={tags} />\n\n        <StyledDt>History</StyledDt>\n        {dateLastRead && (\n          <>\n            {readMoreThanOnce && (\n              <StyledDd>Read {readDates.length} times</StyledDd>\n            )}\n            <StyledDd>\n              {readMoreThanOnce ? 'Last read' : 'Read'} on{' '}\n              <time dateTime={dateLastRead.toString()}>\n                {shortFormatDate(dateLastRead)}\n              </time>\n            </StyledDd>\n          </>\n        )}\n        {dateRated && (\n          <StyledDd>\n            Rated on {}\n            <time dateTime={dateRated.toString()}>\n              {shortFormatDate(dateRated)}\n            </time>\n          </StyledDd>\n        )}\n        {dateReviewed && (\n          <StyledDd>\n            Reviewed on {}\n            <time dateTime={dateReviewed.toString()}>\n              {shortFormatDate(dateReviewed)}\n            </time>\n          </StyledDd>\n        )}\n      </Reveal>\n    </>\n  )\n}\n\nexport default BookMeta\n","import React from 'react'\nimport styled from 'styled-components'\nimport { graphql } from 'gatsby'\n\nimport { PageProps } from 'types/page'\nimport { Book, BookCardType } from 'types/book'\nimport { VideoSnapshot, VideoCardType } from 'types/video'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport { stripHtml } from 'utils/formatting/text'\nimport PATHS from 'routes/paths'\nimport Layout from 'Layout'\nimport { screen, screenMin } from 'styles/responsive'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport VideoCard from 'components/cards/VideoCard'\nimport RelatedBooks from 'components/RelatedBooks'\nimport { formatTimestamp } from 'utils/formatting/time'\n\nimport BookTitle from './BookTitle'\nimport BookImage from './BookImage'\nimport BookReview from './BookReview'\nimport BookMeta from './BookMeta'\nimport BookAffiliates from '../../components/BookAffiliates'\n\nconst StyledGrid = styled(Grid)`\n  *::selection {\n    background: var(--primary-color);\n  }\n`\n\nconst StyledBookTitle = styled.div`\n  align-self: end;\n`\n\nconst StyledHeadlineGridItem = styled(GridItem)`\n  ${screen.m`\n    margin-bottom: 0.5em;\n  `}\n  ${screenMin.l`\n    margin-bottom: 1em;\n  `}\n`\n\ninterface Props extends PageProps {\n  data: {\n    book: Book\n    timestampMentionData: {\n      edges: {\n        node: VideoSnapshot\n      }[]\n    }\n    featuredVideoData: {\n      edges: {\n        node: VideoSnapshot\n      }[]\n    }\n    relatedbooksData: {\n      edges: {\n        node: BookCardType\n      }[]\n    }\n  }\n}\n\nconst BookPage: React.FC<Props> = ({\n  data: { book, timestampMentionData, featuredVideoData },\n  location,\n}) => {\n  const videos = [\n    ...normalizeArray(featuredVideoData),\n    ...normalizeArray(timestampMentionData),\n  ] as VideoSnapshot[]\n  const singleVideo = videos.length === 1\n\n  const relatedBooks = book.relatedBooks as BookCardType[]\n  const blockRowsForLeftColumn = 2 + Math.ceil(videos.length / 2)\n\n  return (\n    <Layout\n      location={location}\n      navTitle=\"Back to book reviews\"\n      navTitleLink={PATHS.BOOKS}\n      title={`${book.title} by ${book.author}`}\n      description={stripHtml(book.html) || book.summary}\n      shareImage={`${book.slug}/share.jpg`}\n    >\n      <StyledGrid\n        full\n        style={{\n          '--primary-color': book.image.childImageColors.lightVibrant,\n          '--secondary-color': book.image.childImageColors.darkVibrant,\n        }}\n      >\n        <StyledHeadlineGridItem\n          as={StyledBookTitle}\n          rows=\"2/3\"\n          rowsFromM=\"1/2\"\n          columnsFromM=\"5 / 12\"\n          columnsFromL=\"8 / 14\"\n          columnsFromXL=\"9 / 15\"\n        >\n          <BookTitle\n            title={book.title}\n            subtitle={book.subtitle}\n            author={book.author}\n            rating7={book.rating7}\n          />\n        </StyledHeadlineGridItem>\n\n        <StyledHeadlineGridItem\n          columnsFromM=\"1/5\"\n          columnsFromL=\"1/8\"\n          columnsFromXL=\"1/9\"\n        >\n          <BookImage image={book.image} bookHeight={book.bookHeight} />\n        </StyledHeadlineGridItem>\n\n        <GridItem\n          spanFromM={4}\n          spanFromL={3}\n          columnsFromL=\"2/5\"\n          columnsFromXL=\"3/6\"\n          spanRowsFromM={blockRowsForLeftColumn + 1}\n          spanRowsFromL={blockRowsForLeftColumn}\n        >\n          <BookMeta\n            pageCount={book.pageCount}\n            dateBookPublished={book.dateBookPublished}\n            publisher={book.publisher}\n            tags={book.tags}\n            series={book.series}\n            readDates={book.readDates}\n            dateLastRead={book.dateLastRead}\n            dateRated={book.dateRated}\n            dateReviewed={book.dateReviewed}\n          />\n        </GridItem>\n\n        <GridItem\n          spanFromM={8}\n          spanFromL={3}\n          columnsFromM=\"5/13\"\n          columnsFromL=\"5/8\"\n          columnsFromXL=\"6/9\"\n          rows=\"5\"\n          rowsFromM=\"3\"\n          rowsFromL={`2/${blockRowsForLeftColumn + 2}`}\n          style={{ marginBottom: '1em' }}\n        >\n          <BookAffiliates links={book.links} />\n        </GridItem>\n\n        <GridItem columnsFromM=\"5/13\" columnsFromL=\"8/15\" columnsFromXL=\"9/15\">\n          <BookReview summary={book.summary} html={book.html} />\n        </GridItem>\n\n        {videos.map((video) => {\n          const foundTimestamp = (video.timestamps || []).find(\n            (t) => t.book && t.book.id === book.id\n          )\n          const timestamp = foundTimestamp && formatTimestamp(foundTimestamp.t)\n\n          return (\n            <GridItem\n              key={video.id}\n              span={singleVideo ? 2 : 1}\n              spanFromM={singleVideo ? 8 : 4}\n              spanFromL={singleVideo ? 6 : 3}\n              spanFromXL={singleVideo ? 6 : 4}\n            >\n              <VideoCard\n                video={video as VideoCardType}\n                timestamp={timestamp}\n                big\n                playsInline\n                hideBookRating\n              />\n            </GridItem>\n          )\n        })}\n      </StyledGrid>\n\n      <RelatedBooks books={relatedBooks} />\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BookPage($id: String!) {\n    book: book(id: { eq: $id }) {\n      ...BookFields\n    }\n    timestampMentionData: allVideo(\n      filter: { timestamps: { elemMatch: { book: { id: { eq: $id } } } } }\n      sort: { datePublished: DESC }\n    ) {\n      edges {\n        node {\n          ...VideoSnapshotFields\n        }\n      }\n    }\n    featuredVideoData: allVideo(\n      filter: { book: { id: { eq: $id } } }\n      sort: { datePublished: DESC }\n    ) {\n      edges {\n        node {\n          ...VideoSnapshotFields\n        }\n      }\n    }\n  }\n`\n\nexport default BookPage\n"],"names":["AFFILIATES","GOODREADS","AMAZON","BOOKSHOP_ORG","AFFILIATE_ACTIONS","StyledLi","styled","FONT","screenMin","StyledArrowIcon","ArrowIcon","_ref","links","React","Object","entries","map","_ref2","affiliateAbbr","label","key","href","long","MarkdownWrapper","trim","COLOR","StyledWrapper","StyledTitleGridItem","GridItem","StyledGrid","Grid","screen","books","featuredSlugs","ownedSlug","length","full","H","size","as","book","featured","slug","includes","id","span","spanFromM","spanFromL","BookCard","hideDetails","StyledSummaryTrigger","screenMax","StyledIcon","open","children","ariaId","onClick","className","Link","StyledContent","isOpen","isTransitioning","_ref3","_ref4","setIsOpen","useState","setIsTransitioning","contentHeight","setContentHeight","contentEl","createRef","useEffect","ref","current","clientHeight","setTimeout","style","maxHeight","StyledBookCard","$big","props","BORDER_RADIUS","StyledImgWrapper","StyledImg","Image","StyledAccessibilityTitle","StyledMeta","StyledVideoLink","big","to","background","image","childImageColors","darkVibrant","lightMuted","color","vibrant","muted","bookHeight","toFixed","title","author","ImageColor","rating7","video","e","preventDefault","navigate","StarRating","of7","viewBox","d","YouTubePlayerConfig","youtube","playerVars","rel","controls","autoplay","StyledVideoCard","StyledPlayButton","StyledPlayIcon","PlayIcon","StyledDuration","StyledDetails","StyledTimestamp","StyledDatePublished","StyledH","StyledBookContentsWrapper","isStars","timestamp","playsInline","hideOwnedByRating","playVideo","setPlayVideo","featuredBookCount","timestamps","filter","t","ownedBy","lightVibrant","darkMuted","AspectRatioWrapper","backgroundColor","YouTubePlayer","url","youtubeId","unformatTimestamp","config","width","height","formatTimestamp","duration","shortFormatDate","datePublished","HideOnPercy","viewCount","parseInt","process","GATSBY_YOUTUBE_VIEWS_MINIMUM_VISIBLE","formatViewCount","stripHtml","text","replace","sortAlphabetically","strings","sort","a","b","normalizeArray","query","edges","node","window","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","tagPrefixNames","type","genre","sub","splitTagByPrefix","tag","parts","split","slice","join","splitTagsByPrefix","tags","resultMap","reduce","prev","prefix","name","unprefixed","value","push","keys","p","values","getTagsFromBooks","forEach","dedupedTags","Set","orderedTags","startsWith","filterBooksByTags","filterType","filterGenre","filterSubject","ignorePrefix","filteredBooks","StyledTitle","StyledSubtitle","StyledAuthor","subtitle","decorative","StyledBookImage","toVW","MARGIN_COLUMNS","COLUMN_WIDTH","GAP","SUMMARY_ARIA_ID","StyledBookReview","StyledSummary","summary","html","isSummaryOpen","setisSummaryOpen","dangerouslySetInnerHTML","__html","RevealTrigger","Reveal","StyledLink","FILTER_UNDERLINE_STYLE","PATHS","StyledOl","splitTags","TagLink","curr","META_ARIA_ID","StyledRevealTrigger","StyledReveal","StyledDt","StyledDd","pageCount","dateBookPublished","publisher","series","readDates","dateLastRead","dateRated","dateReviewed","windowWidth","useWindowSize","readMoreThanOnce","BREAKPOINT","formatYear","number","TagsList","dateTime","toString","displayName","componentId","StyledBookTitle","StyledHeadlineGridItem","data","timestampMentionData","featuredVideoData","location","videos","singleVideo","relatedBooks","blockRowsForLeftColumn","Math","ceil","Layout","navTitle","navTitleLink","description","shareImage","rows","rowsFromM","columnsFromM","columnsFromL","columnsFromXL","BookTitle","BookImage","spanRowsFromM","spanRowsFromL","BookMeta","rowsFromL","marginBottom","BookAffiliates","BookReview","foundTimestamp","find","spanFromXL","VideoCard","hideBookRating","RelatedBooks"],"sourceRoot":""}