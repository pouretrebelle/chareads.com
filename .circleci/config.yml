version: 2
jobs:
  setup:
    working_directory: ~/chareads.com
    docker:
      - image: circleci/node:12.15
    steps:
      - checkout
      - run:
          name: Update NPM
          command: 'sudo npm install -g npm@6.13.4'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  lint:
    working_directory: ~/chareads.com
    docker:
      - image: circleci/node:12.15
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Packages
          command: npm install
      - run:
          name: Lint
          command: npm run lint
      - store_artifacts:
          path: lint-results.xml
          prefix: tests
      - store_test_results:
          path: lint-results.xml
  test:
    working_directory: ~/chareads.com
    docker:
      - image: circleci/node:12.15
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Packages
          command: npm install
      - run:
          name: Test
          command: npm run test
      - store_artifacts:
          path: test-results.xml
          prefix: tests
      - store_test_results:
          path: test-results.xml
  deploy:
    working_directory: ~/chareads.com
    docker:
      - image: circleci/node:12.15
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Packages
          command: npm install
      - run:
          name: Deploy
          command: npm run deploy
workflows:
  version: 2
  test:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - setup
            - lint
            - test
